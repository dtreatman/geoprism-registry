{"version":3,"sources":["webpack:///./src/app/admin/admin-header.component.ts","webpack:///./src/app/core/message/message.component.ts","webpack:///./src/app/admin/admin-header.component.html","webpack:///./src/app/core/message/message.component.html","webpack:///./src/app/core/modals/confirm-modal.component.ts","webpack:///./src/app/core/service/event-http.service.ts","webpack:///./src/app/admin/logo/system-logo.service.ts","webpack:///./src/app/core/modals/modal.ts","webpack:///./src/app/admin/account/accounts.component.ts","webpack:///./src/app/admin/logo/system-logos.component.ts","webpack:///./src/app/admin/logo/system-logo.component.ts","webpack:///./src/app/admin/email/email.component.ts","webpack:///./src/app/admin/email/email.service.ts","webpack:///./src/app/core/form-fields/boolean-field/boolean-field.component.ts","webpack:///./src/app/admin/account/account.component.ts","webpack:///./src/app/admin/account/account-invite.component.ts","webpack:///./src/app/admin/account/account-invite-complete.component.ts","webpack:///./src/app/core/service/core.service.ts","webpack:///./src/app/core/form-fields/boolean-field/boolean-field.component.html","webpack:///./src/app/core/auth/auth.service.ts","webpack:///./src/app/core/service/localization.service.ts","webpack:///./src/app/admin/account/accounts.component.html","webpack:///./src/app/core/phone.pipe.ts","webpack:///./src/app/admin/logo/system-logos.component.html","webpack:///./src/app/admin/logo/system-logo.component.html","webpack:///./src/app/admin/email/email.component.html","webpack:///./src/app/admin/account/account.component.html","webpack:///./src/app/admin/account/account-invite.component.html","webpack:///./src/app/admin/account/account.ts","webpack:///./src/app/admin/account/account-invite-complete.component.html","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/admin/admin-routing.module.ts","webpack:///./src/app/admin/admin.module.ts","webpack:///./src/app/core/localize/localize.component.ts","webpack:///./src/app/core/localize/localize.pipe.ts","webpack:///./src/app/core/localize/localize.component.html","webpack:///./src/app/admin/account/account.service.ts"],"names":["this","context","acp","AdminHeaderComponent","service","error","message","ngOnInit","registerListener","ngOnDestroy","deregisterListener","start","complete","console","log","onError","onMessage","msg","MessageComponent","bsModalRef","localizeService","decode","submitText","cancelText","type","ModalTypes","warning","onConfirm","Subject","confirm","hide","next","data","ConfirmModalComponent","_backend","_defaultOptions","currentRequests","get","url","options","incrementRequestCount","finally","decrementRequestCount","post","body","Http","EventHttpService","ehttp","http","getIcons","toPromise","then","response","json","icons","catch","handleError","bind","remove","oid","headers","Headers","JSON","stringify","BasicService","SystemLogoService","StepConfig","Step","router","modalService","res","resultSet","count","pageNumber","pageSize","p","page","user","filter","h","onClickRemove","account","show","animated","backdrop","ignoreBackdropClick","content","subscribe","edit","navigate","newInstance","onPageChange","inviteUsers","AccountsComponent","icon","custom","SystemLogosComponent","route","location","iconService","eventService","dropActive","snapshot","params","autoUpload","queueLimit","removeAfterUpload","uploader","FileUploader","onBeforeUploadItem","fileItem","onCompleteItem","item","status","onSuccessItem","back","onErrorItem","onBuildItemForm","form","append","ngAfterViewInit","that","onAfterAddingFile","uploadElRef","nativeElement","value","reader","FileReader","onload","e","file","result","readAsDataURL","_file","fileOver","cancel","onSubmit","uploadAll","clear","clearQueue","SystemLogoComponent","email","server","username","password","port","from","to","getInstance","apply","EmailComponent","setting","EmailService","localizeLabelKey","label","valueChange","EventEmitter","toggle","emit","BooleanFieldComponent","accountService","resolve","state","Promise","reject","AccountResolver","unlock","roleIds","i","groups","length","group","push","assigned","changePassword","AccountComponent","invite","UserInvite","newInvite","j","roles","role","roleId","inviteUser","AccountInviteComponent","sub","token","window","href","inviteComplete","AccountInviteCompleteComponent","authService","listeners","listener","indexOfItem","indexOf","splice","rError","Response","removeUser","parse","EventService","handleMessage","generateId","replace","c","r","Math","random","toString","IdService","loggedIn","userName","roleDisplayLabels","version","cookie","check","cookieData","cookieDataJSON","isLoggedIn","setUser","isAdmin","isMaintainer","isContributer","getUsername","getRoles","str","getRoleDisplayLabels","getVersion","AuthService","locales","parser","Globalize","numberParser","formatter","numberFormatter","getLocales","setLocales","create","localizedValue","localeValues","forEach","locale","parseNumber","formatNumber","number","Number","localize","bundle","key","com","runwaysdk","Localize","index","lastIndexOf","temp","slice","LocalizationService","transform","args","country","phone","PhonePipe","User","Role","Group","Account","PageResult","xhrBackend","requestOptions","CoreModule","title","AdminRoutingModule","routedComponents","AdminModule","text","LocalizeComponent","LocalizePipe","URLSearchParams","set","search","AccountService"],"mappings":"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","file":"0.chunk.js","sourcesContent":["///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component } from '@angular/core';\n\ndeclare var acp:string;\n\n@Component({\n  selector: 'admin-header',\n  templateUrl: './admin-header.component.html',\n  styleUrls: []\n})\nexport class AdminHeaderComponent {\n  context:string;\n\n  constructor() {\n    this.context = acp;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { EventService, IEventListener } from '../service/core.service';\n\n@Component({\n  \n  selector: 'message',\n  templateUrl: './message.component.html',\n  styles: [\n    '.error-container { text-align: center; border-width: 1px; border-color: #8c0000; border-style: solid; color: #8c0000; font-size: 17px; background: white;}',\n    '.message-container { text-align: center; border-width: 1px; border-color: #106828; border-style: solid; margin-left: 10%; margin-right: 10%; color: #106828; }'\n  ]\n})\nexport class MessageComponent implements OnInit, IEventListener {\n\t\n  error: any = null;\n  \n  message: string = \"\";\n\n  constructor(private service: EventService) { }\n\n  ngOnInit(): void {\n    this.service.registerListener(this);\n  }\n  \n  ngOnDestroy(): void {\n    this.service.deregisterListener(this);\n  }\n  \n  start(): void {\n    this.error = null;\n  }\n  \n  complete(): void {\n    console.log('complete');\n  }  \n  \n  onError(error: any): void {\n    this.error = error;\n  }\n  \n  onMessage(msg: string): void {\n    this.message = msg;\n  }\n}\n","    <!-- HEADER AND NAVBAR -->\n    <header>\n      <nav class=\"navbar navbar-default\">\n        <div class=\"container-fluid\">\n          <div class=\"navbar-header\">\n            <a class=\"navbar-brand\" routerLink=\"/\" [title]=\"'userMenu.menuTooltip' | localize\"><img [src]=\"context + '/logo/view?id=logo'\" /></a>\n<!--              <a class=\"navbar-brand\" routerLink=\"/admin\"><localize key=\"admin.link\"></localize></a> -->\n          </div>\n          \n          <ul class=\"nav navbar-nav navbar-right\">\n            <li dropdown>\n              <!-- <a class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\" dropdownToggle>\n                <localize key=\"admin.title\"></localize><span class=\"caret\"></span>\n              </a>             -->\n              <a class=\"dropdown-toggle\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\" dropdownToggle> \n               <span class=\"glyphicon glyphicon-menu-hamburger\"></span> \n             </a>   \n              <ul *dropdownMenu class=\"dropdown-menu\">\n                <li role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/admin/logos\" routerLinkActive=\"active\"><i></i><localize key=\"Icons\"></localize></a></li>\n                <li role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/admin/email\" routerLinkActive=\"active\"><i></i><localize key=\"email.link\"></localize></a></li>\n                <li role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/admin/accounts\" routerLinkActive=\"active\"><i></i><localize key=\"accounts.link\"></localize></a></li>\n<!-- \n                <li role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/admin/geotree\" routerLinkActive=\"active\"><i></i><localize key=\"Manage_Geoentities\"></localize></a></li>\n                <li role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/admin/universaltree\" routerLinkActive=\"active\"><i></i><localize key=\"Manage_Universals\"></localize></a></li>\n                <li role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/admin/classifiertree\" routerLinkActive=\"active\"><i></i><localize key=\"Term_Ontology_Admin\"></localize></a></li>\n                <li role=\"menuitem\"><a class=\"dropdown-item\" routerLink=\"/admin/browser\" routerLinkActive=\"active\"><i></i><localize key=\"databrowser.title\"></localize></a></li>\n -->                \n              </ul>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </header>\n","\n<div>\n  <div *ngIf=\"message\" class=\"message-container\">\n    <div class=\"label-holder\">\n      <strong><localize key='dashboard.messagesLabel'></localize></strong>\n    </div>\n    <div class=\"holder\">\n      <div>\n        <p class=\"message\">{{message}}</p>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"error\" class=\"error-container\">\n    <div class=\"label-holder\">\n      <strong><localize key='dashboard.errorsLabel'></localize></strong>\n    </div>\n    <div class=\"holder\">\n      <div>\n        <p class=\"error-message\" *ngIf=\"error.localizedMessage\">{{error.localizedMessage}}</p>\n        <p class=\"error-message\" *ngIf=\"!error.localizedMessage\"><localize key='error.generic'></localize></p>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\nimport { Subject } from 'rxjs/Subject';\nimport { LocalizationService } from '../service/localization.service';\nimport { ModalTypes } from './modal';\n\n\n@Component( {\n    selector: 'confirm-modal',\n    templateUrl: './confirm-modal.component.html',\n    styleUrls: ['./modal.css']\n} )\nexport class ConfirmModalComponent {\n    /*\n     * Message\n     */\n    @Input() message: string = this.localizeService.decode(\"confirm.modal.default.message\");\n\n    @Input() data: any;\n\n    @Input() submitText: string = this.localizeService.decode(\"modal.button.submit\");\n\n    @Input() cancelText: string = this.localizeService.decode(\"modal.button.cancel\");\n\n    @Input() type: ModalTypes = ModalTypes.warning;\n\n    /*\n     * Called on confirm\n     */\n    public onConfirm: Subject<any>;\n\n    constructor( public bsModalRef: BsModalRef, private localizeService: LocalizationService ) { }\n\n    ngOnInit(): void {\n        this.onConfirm = new Subject();\n    }\n\n    confirm(): void {\n        this.bsModalRef.hide();\n        this.onConfirm.next( this.data );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Http, RequestOptions, RequestOptionsArgs, Response, ConnectionBackend } from '@angular/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/finally';\n\nimport { EventService } from './core.service';\n\n@Injectable()\nexport class EventHttpService extends Http {\n  private currentRequests: number = 0;\n\n  public constructor(_backend: ConnectionBackend, _defaultOptions: RequestOptions, private service: EventService) {\n    super(_backend, _defaultOptions);\n  }\n  \n  public get(url: string, options?: RequestOptionsArgs) : Observable<Response> {\n    this.incrementRequestCount();\n   \n    var response = super.get(url, options).finally(() => {\n      this.decrementRequestCount();\n    });\n    return response;\n  }\n  \n  public post(url: string, body: any, options?: RequestOptionsArgs): Observable<Response> {\n    this.incrementRequestCount();\n    \n    var response = super.post(url, body, options).finally(() => {\n      this.decrementRequestCount();\n    });\n    return response;    \n  }\n\n  private decrementRequestCount() {\n    if (--this.currentRequests == 0) {\n      this.service.complete();\n    }\n  }\n\n  private incrementRequestCount() {\n    if (this.currentRequests++ == 0) {\n      this.service.start();\n    }\n  }\n}","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { Headers, Http, Response, URLSearchParams } from '@angular/http';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { EventService, BasicService } from '../../core/service/core.service';\nimport { EventHttpService } from '../../core/service/event-http.service';\n\nimport { SystemLogo } from './system-logo';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class SystemLogoService extends BasicService {\n  \n  constructor(service: EventService, private ehttp: EventHttpService, private http: Http) {\n    super(service); \n  }\n  \n  getIcons(): Promise<SystemLogo[]> {\n    return this.ehttp\n      .get(acp + '/logo/getAll')\n      .toPromise()\n      .then(response => {\n        return response.json().icons as SystemLogo[];\n      })\n      .catch(this.handleError.bind(this));\n  }  \n\n  remove(oid:string): Promise<Response> {\n    \n    let headers = new Headers({\n      'Content-Type': 'application/json'\n    });  \n    \n    return this.ehttp\n    .post(acp + '/logo/remove', JSON.stringify({oid:oid}), {headers: headers})\n    .toPromise()\n    .catch(this.handleError.bind(this));      \n  }\n}\n","export enum ModalTypes {\n    \"warning\" = \"WARNING\",\n    \"danger\" = \"DANGER\"\n}\n\nexport class StepConfig {\n    steps: Step[];\n}\n\nexport class Step {\n    label: string;\n    active: boolean;\n    enabled: boolean;\n}","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { User, PageResult, Account } from './account';\nimport { AccountService } from './account.service';\n\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\nimport { ConfirmModalComponent } from '../../core/modals/confirm-modal.component';\nimport { LocalizationService } from '../../core/service/localization.service';\n\ndeclare let acp: string;\n\n@Component({\n  selector: 'accounts',\n  templateUrl: './accounts.component.html',\n  styles: ['./accounts.css']\n})\nexport class AccountsComponent implements OnInit {\n  res:PageResult = {\n    resultSet:[],\n    count:0,\n    pageNumber:1,\n    pageSize:10\n  };\n  p:number = 1; \n  bsModalRef: BsModalRef;\n  \n  constructor(\n    private router: Router,\n    private service: AccountService,\n    private modalService: BsModalService,\n    private localizeService: LocalizationService\n  ) { }\n\n  ngOnInit(): void {\n    this.service.page(this.p).then(res => {\n      this.res = res;\t\n    });\t  \n  }\n  \n  remove(user:User) : void {\n    this.service.remove(user.oid).then(response => {\n      this.res.resultSet = this.res.resultSet.filter(h => h.oid !== user.oid);    \n    });\t  \t  \n  }\n  \n  onClickRemove(account:Account) : void {\n    this.bsModalRef = this.modalService.show( ConfirmModalComponent, {\n        animated: true,\n        backdrop: true,\n        ignoreBackdropClick: true,\n    } );\n    this.bsModalRef.content.message = this.localizeService.decode( \"account.removeContent\" );\n    this.bsModalRef.content.submitText = this.localizeService.decode( \"modal.button.delete\" );\n\n    this.bsModalRef.content.onConfirm.subscribe( data => {\n      this.remove(account.user);\n    } );\n  }\n  \n  edit(user:User) : void {\n    this.router.navigate(['/admin/account', user.oid]);\t  \n  }\n  \n  newInstance(): void {\n    this.router.navigate(['/admin/account', 'NEW']);\t  \n  }  \n  \n  onPageChange(pageNumber:number): void {\n    this.service.page(pageNumber).then(res => {\n      this.res = res;\t\n    });\t  \t  \n  }  \n  \n  inviteUsers(): void {\n    this.router.navigate(['/admin/invite']);\t  \n  }\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\n\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\nimport { ConfirmModalComponent } from '../../core/modals/confirm-modal.component';\nimport { LocalizationService } from '../../core/service/localization.service';\n\nimport { SystemLogo } from './system-logo';\nimport { SystemLogoService } from './system-logo.service';\n\ndeclare let acp: string;\n\n@Component({\n  \n  selector: 'system-logos',\n  templateUrl: './system-logos.component.html',\n  styleUrls: []\n})\nexport class SystemLogosComponent implements OnInit {\n  public icons: SystemLogo[];\n  context: string;\n  bsModalRef: BsModalRef;\n\n  constructor(\n    private router: Router,\n    private service: SystemLogoService,\n    private modalService: BsModalService,\n    private localizeService: LocalizationService) {\n\t  \n    this.context = acp as string;    \n  }\n\n  ngOnInit(): void {\n    this.getIcons();    \n  }\n  \n  onClickRemove(icon) : void {\n    this.bsModalRef = this.modalService.show( ConfirmModalComponent, {\n        animated: true,\n        backdrop: true,\n        ignoreBackdropClick: true,\n    } );\n    this.bsModalRef.content.message = this.localizeService.decode( \"system.image.removeContent\" );\n    this.bsModalRef.content.submitText = this.localizeService.decode( \"modal.button.delete\" );\n\n    this.bsModalRef.content.onConfirm.subscribe( data => {\n      this.remove(icon);\n    } );\n  }\n    \n  getIcons() : void {\n    this.service.getIcons().then(icons => {\n      this.icons = icons        \n    })\n  }\n  \n  edit(icon: SystemLogo) : void {\n    this.router.navigate(['/admin/logo', icon.oid]);\n  }  \n  \n  remove(icon: SystemLogo) : void {\n    this.service.remove(icon.oid).then(response => {\n      icon.custom = false;\n    });\n  }  \n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, OnInit, ViewChild, ElementRef, Inject, Input } from '@angular/core';\nimport { ActivatedRoute, Params, Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { FileSelectDirective, FileDropDirective, FileUploader, FileUploaderOptions } from 'ng2-file-upload/ng2-file-upload';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/switchMap';\n\nimport { EventService } from '../../core/service/core.service';\nimport { SystemLogoService } from './system-logo.service';\nimport { SystemLogo } from './system-logo';\n\ndeclare var acp: any;\n\n@Component({\n  \n  selector: 'system-logo',\n  templateUrl: './system-logo.component.html',\n  styles: []\n})\nexport class SystemLogoComponent implements OnInit {\n  oid: SystemLogo;\n\n  public uploader:FileUploader;\n  public dropActive:boolean = false;\n\n  @ViewChild('uploadEl') \n  private uploadElRef: ElementRef;  \n  \n  file: any;\n  context: string;\n\n  constructor(\n    private router: Router,      \n    private route: ActivatedRoute,\n    private location: Location,\n    private iconService: SystemLogoService,\n    private eventService: EventService) {\n    this.context = acp as string;\t  \n  }\n\n  ngOnInit(): void {\n    this.oid = this.route.snapshot.params['oid'];\n        \n    let options:FileUploaderOptions = {\n      autoUpload: false,\n      queueLimit: 1,\n      removeAfterUpload: true,\n      url: acp + '/logo/apply'\n    };    \n    \n    this.uploader = new FileUploader(options);\n    this.uploader.onBeforeUploadItem = (fileItem: any) => {\n      this.eventService.start();\n    };    \n    this.uploader.onCompleteItem = (item:any, response:any, status:any, headers:any) => {\n      this.eventService.complete();\n    };    \n    this.uploader.onSuccessItem = (item: any, response: string, status: number, headers: any) => {\n      this.location.back();\n    };\n    this.uploader.onErrorItem = (item: any, response: string, status: number, headers: any) => {\n      this.eventService.onError(response);  \n    };\n    this.uploader.onBuildItemForm = (fileItem: any, form: any) => {\n      form.append('oid', this.oid);        \n    };        \n  }\n  \n  ngAfterViewInit() {\n    let that = this;\n  \n    this.uploader.onAfterAddingFile = (item => {\n      this.uploadElRef.nativeElement.value = ''\n        \n      let reader = new FileReader();\n        reader.onload = function(e: any) {\n        that.file = reader.result;\n      };\n      reader.readAsDataURL(item._file);\n    });\n  }\n  \n  fileOver(e:any):void {\n    this.dropActive = e;\n  }  \n  \n  cancel(): void {\n    this.location.back();      \n  } \n  \n  onSubmit(): void {\n    if(this.file == null) {\n      this.location.back();\n    }\n    else {    \n      this.uploader.uploadAll();      \n    }\n  }  \n  \n  clear(): void {\n    this.file = null;\n    \n    this.uploader.clearQueue()    \n  }\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, EventEmitter, Input, OnInit, OnChanges, Output, Inject, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Params, Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { Email } from './email';\nimport { EmailService } from './email.service';\n\n\n@Component({\n  \n  selector: 'email',\n  templateUrl: './email.component.html',\n  styleUrls: []\n})\nexport class EmailComponent implements OnInit {\n  public email: Email = {\n    oid:'',\n    server:'',\n    username:'',\n    password:'',\n    port: 0,\n    from:'',\n    to:'',\n  };\n\n  constructor(\n    private service: EmailService,\n    private router: Router,      \n    private route: ActivatedRoute,\n    private location: Location) {\n  }\n\n  ngOnInit(): void {\n    this.service.getInstance().then(email => {\n      this.email = email; \n    });\n  }\n  \n  cancel(): void {    \n    this.location.back();\n  } \n  \n  onSubmit(): void {\n    this.service.apply(this.email)\n      .then(email => {\n        this.location.back();\n      });\n  }  \n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { Headers, Http, Response, URLSearchParams } from '@angular/http';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { EventService, BasicService } from '../../core/service/core.service';\nimport { EventHttpService } from '../../core/service/event-http.service';\n\nimport { Email } from './email';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class EmailService extends BasicService {\n  \n  constructor(service: EventService, private ehttp: EventHttpService, private http: Http) {\n    super(service); \n  }\n  \n  getInstance(): Promise<Email> {\n    return this.ehttp\n      .get(acp + '/email/getInstance')\n      .toPromise()\n      .then(response => {\n        return response.json() as Email;\n      })\n      .catch(this.handleError.bind(this));\n  }  \n  \n  apply(email:Email): Promise<Email> {\n    let headers = new Headers({\n      'Content-Type': 'application/json'\n    });  \n  \n    return this.ehttp\n      .post(acp + '/email/apply', JSON.stringify({setting:email}), {headers: headers})\n      .toPromise()\n      .then((response: any) => {\n        return response.json() as Email;\n      })\n      .catch(this.handleError.bind(this));      \n  }  \n}\n","import {Component, Input, Output, EventEmitter} from '@angular/core';\n\ndeclare var acp:string;\n\n@Component({    \n  selector: 'boolean-field',\n  templateUrl: './boolean-field.component.html',\n  styles: ['./boolean-field.css']\n})\nexport class BooleanFieldComponent {\n\n  @Input() value:boolean = false;  \n  @Input() localizeLabelKey:string = \"\"; // localization key used to localize in the component template\n  @Input() label:string = \"\"; // raw string input\n  \n  @Output() public valueChange = new EventEmitter<boolean>();\n\n  constructor(){}\n  \n  toggle():void {\n    this.value = !this.value;\n    \n    this.valueChange.emit(this.value);\n  }\n}","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, EventEmitter, Input, OnInit, OnChanges, Output, Inject, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Params, Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/switchMap';\n\nimport { Account } from './account';\n\nimport { EventService } from '../../core/service/core.service';\nimport { AccountService } from './account.service';\n\n\nexport class AccountResolver implements Resolve<Account> {\n  constructor(@Inject(AccountService) private accountService:AccountService, @Inject(EventService) private eventService: EventService) {}\n  \n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):Promise<Account> {\n\tlet oid = route.params['oid'];\n\t\n\tif(oid === 'NEW') {\n      return this.accountService.newInstance().catch((error:any) => {\n        this.eventService.onError(error); \n        \n        return Promise.reject(error);\n      });    \t\t\t\t\n\t}\n\telse {\t\n      return this.accountService.edit(oid).catch((error:any) => {\n        this.eventService.onError(error); \n        \n        return Promise.reject(error);\n      });    \t\t\n\t}\n  }\n}\n\n@Component({  \n  selector: 'account',\n  templateUrl: './account.component.html',\n  styles: ['.modal-form .check-block .chk-area { margin: 10px 0px 0 0;}']\n})\nexport class AccountComponent implements OnInit {\n  account:Account;\n  \n  constructor(\n    private service:AccountService,\n    private route:ActivatedRoute,\n    private location:Location) {\n  }\n\n  ngOnInit(): void {\n    this.account = this.route.snapshot.data['account'];\n  }\n  \n  cancel(): void {\n\tif(this.account.user.newInstance === true) {\n      this.location.back();\t\t\n\t}\n\telse {\n      this.service.unlock(this.account.user.oid).then(response => {\n        this.location.back();\n      });\t\t\n\t}\n  } \n  \n  onSubmit(): void {\n    let roleIds:string[] = [];\n  \n    for(let i = 0; i < this.account.groups.length; i++) {\n      let group = this.account.groups[i];\n      \n      roleIds.push(group.assigned);\n//      for(let j = 0; j < group.roles.length; j++) {\n//        let role = group.roles[j];\n//        \n//        if(role.assigned) {\n//          roleIds.push(role.roleId);\n//        }      \n//      }    \n    }\n    \n    if(!this.account.changePassword && !this.account.user.newInstance) {\n      delete this.account.user.password;\n    }\n    \n    this.service.apply(this.account.user, roleIds).then(response => {\n      this.location.back();\n    });\n  }  \n}","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, EventEmitter, Input, OnInit, OnChanges, Output, Inject, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Params, Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/switchMap';\n\nimport { Account, UserInvite } from './account';\n\nimport { EventService } from '../../core/service/core.service';\nimport { AccountService } from './account.service';\n\n@Component({\n  selector: 'account-invite',\n  templateUrl: './account-invite.component.html',\n  styles: ['.modal-form .check-block .chk-area { margin: 10px 0px 0 0;}']\n})\nexport class AccountInviteComponent implements OnInit {\n  invite:UserInvite;\n  \n  constructor(\n    private service:AccountService,\n    private route:ActivatedRoute,\n    private eventService:EventService,\n    private location:Location) {\n  }\n\n  ngOnInit(): void {\n    this.invite = new UserInvite();\n    \n    this.service.newInvite().catch((error:any) => {\n      this.eventService.onError(error); \n    \n      return Promise.reject(error);\n    }).then((account:Account) => {\n      this.invite.groups = account.groups;\n    });\n  }\n  \n  cancel(): void {\n    this.location.back();\t\t\n  } \n  \n  onSubmit(): void {\n    let roleIds:string[] = [];\n    \n    for(let i = 0; i < this.invite.groups.length; i++) {\n      let group = this.invite.groups[i];\n      \n      for(let j = 0; j < group.roles.length; j++) {\n        let role = group.roles[j];\n        \n        if(role.assigned) {\n          roleIds.push(role.roleId);\n        }      \n      }    \n    }\n  \n    this.service.inviteUser(this.invite, roleIds).then(response => {\n      this.location.back();\n    });\n  }  \n}","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, EventEmitter, Input, OnInit, OnChanges, Output, Inject, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Params, Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/switchMap';\n\nimport { Account, User } from './account';\n\nimport { EventService } from '../../core/service/core.service';\nimport { AccountService } from './account.service';\n\ndeclare let acp: string;\n\n@Component({\n  selector: 'account-invite-complete',\n  templateUrl: './account-invite-complete.component.html',\n  styles: ['.modal-form .check-block .chk-area { margin: 10px 0px 0 0;}']\n})\nexport class AccountInviteCompleteComponent implements OnInit {\n  user:User;\n  private sub: any;\n  token: string; \n  \n  constructor(\n    private service:AccountService,\n    private eventService:EventService,\n    private route:ActivatedRoute,\n    private location:Location) {\n  }\n\n  ngOnInit(): void {\n    this.service.newInstance().catch((error:any) => {\n      this.eventService.onError(error); \n    \n      return Promise.reject(error);\n    }).then((account:Account) => {\n      this.user = account.user;\n    });\n    this.sub = this.route.params.subscribe(params => {\n       this.token = params['token'];\n    });\n  }\n  \n  cancel(): void {\n    window.location.href = acp;\n  } \n  \n  onSubmit(): void {\n    this.service.inviteComplete(this.user, this.token).then(response => {\n      window.location.href = acp;\n    });\n  }  \n}","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Response } from '@angular/http';\n\nimport { AuthService } from '../auth/auth.service';\nimport { RunwayException } from '../runway-exception';\n\ndeclare var acp:string;\n\nexport interface IEventListener {\n  start(): void;\n  complete(): void;\n  onError(error:RunwayException): void;\n  onMessage(message:string): void;\n}\n\n@Injectable()\nexport class EventService {\n  private listeners: IEventListener[] = [];\n  \n  public constructor(private authService:AuthService, private router:Router) {}\n  \n  public registerListener(listener: IEventListener): void {\n   this.listeners.push(listener);\n  }\n  \n  public deregisterListener(listener: IEventListener): boolean {\n    let indexOfItem = this.listeners.indexOf(listener);\n\n    if (indexOfItem === -1) {\n      return false;\n    }\n\n    this.listeners.splice(indexOfItem, 1);\n\n    return true;\n  }\n  \n  public start(): void {\n    for (const listener of this.listeners) {\n      listener.start();\n    }\n  }\n  \n  public complete(): void {\n    for (const listener of this.listeners) {\n      listener.complete();\n    }\n  }\n  \n  public onMessage(msg:string): void {\n    for (const listener of this.listeners) {\n      listener.onMessage(msg);\n    }  \n  }\n  \n  public onError(error:any): void {\n    let rError:any = null;\n\t\n\tif(error instanceof Response) {\n      if(error.status === 401) {\n        this.authService.removeUser();\n        \n        this.router.navigate(['login']); \n      } \n      else {\n        rError = error.json() as RunwayException;    \t  \n      }\n\t}\n\telse {\n      rError = JSON.parse(error) as RunwayException;\n\t}\n\t\n\tif(rError != null) {\n      for (const listener of this.listeners) {\n        listener.onError(rError);\n      }  \t\t\n\t}\n  }\n}\n\n@Injectable()\nexport class BasicService {\n  service: EventService;\n\n  constructor(service: EventService) {\n    this.service = service;\n  }\n\n  protected handleError(error: any): Promise<any> {\n   /*\n    * Must add the null check on this because the this reference gets messed up when\n    * this code is executed from ng2 zone.js\n    */\n\t  \n    if(this != null) {\n      this.service.onError(error);     \n    }\n      \n    return Promise.reject(error);\n  }\n  \n  protected handleMessage(msg: string): void {\n   /*\n    * Must add the null check on this because the this reference gets messed up when\n    * this code is executed from ng2 zone.js\n    */\n    \n    if(this != null) {\n      this.service.onMessage(msg);     \n    }\n  }\n}\n\n@Injectable()\nexport class IdService {\n\n  constructor() {}\n  \n  generateId(): string {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\n      return v.toString(16);\n    });\n  }    \n}\n","<div class=\"check-block\">\n  <div (click)=\"toggle()\" [ngClass]=\"{'chk-checked' : value}\" ng-style=\"chkstyle\" class=\"jcf-unselectable chk-area\">\n    <span></span>\n  </div>\n  \n  <label *ngIf=\"label.length > 0\" class=\"checkbox-label\">{{label}}</label>\n  <label *ngIf=\"localizeLabelKey.length > 0\" class=\"checkbox-label\"><localize key=\"{{localizeLabelKey}}\"></localize></label>\n</div>","import { Injectable } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { User } from './user';\n\n@Injectable()\nexport class AuthService {\n  private user:User = {\n    loggedIn:false,\n    userName:'',\n    roles:[],\n    roleDisplayLabels:[],\n    version:\"0\"\n  };\n\n    constructor( private service: CookieService ) {\n        let cookie = service.get( 'user' );\n\n        if ( this.service.check( \"user\" ) && cookie != null && cookie.length > 0 ) {\n            let cookieData: string = this.service.get( \"user\" )\n            let cookieDataJSON: any = JSON.parse( JSON.parse( cookieData ) );\n            \n            this.user.userName = cookieDataJSON.userName;\n            this.user.roles = cookieDataJSON.roles;\n            this.user.loggedIn = cookieDataJSON.loggedIn;\n            this.user.roleDisplayLabels = cookieDataJSON.roleDisplayLabels;\n            this.user.version = cookieDataJSON.version;\n        }\r\n    }\n    \n    isLoggedIn():boolean {\n      return this.user.loggedIn;\n    }\n    \n    setUser(user:User):void {\n      this.user = user;    \n    }\n\n    removeUser(): void {\n      this.user = {\n        loggedIn:false,\n        userName:'',\n        roles:[],\n        roleDisplayLabels:[],\n        version:\"0\"\n      };\n    }\n\n    isAdmin(): boolean {\n        return this.user.roles.indexOf( \"geoprism.admin.Administrator\" ) !== -1 || this.user.roles.indexOf( \"commongeoregistry.RegistryAdministrator\" ) !== -1;\n    }\n\n    isMaintainer(): boolean {\n        return this.user.roles.indexOf( \"commongeoregistry.RegistryMaintainer\" ) !== -1;\n    }\n    \n    isContributer(): boolean {\n        return this.user.roles.indexOf( \"commongeoregistry.RegistryContributor\" ) !== -1;\n    }\n  \n  getUsername(): string {\n    return this.user.userName;\n  }\n  \n  getRoles(): string {\n    let str = \"\";\n    for (let i = 0; i < this.user.roles.length; ++i)\n    {\n      str = str + this.user.roles[i];\n      \n      if (i < this.user.roles.length-1)\n      {\n        str = str + \",\";\n      }\n    }\n  \n    return str;\n  }\n  \n  getRoleDisplayLabels(): string {\n    let str = \"\";\n    for (let i = 0; i < this.user.roles.length; ++i)\n    {\n      str = str + this.user.roleDisplayLabels[i];\n      \n      if (i < this.user.roleDisplayLabels.length-1)\n      {\n        str = str + \",\";\n      }\n    }\n  \n    return str;\n  }\n  \n  getVersion(): string {\n    return this.user.version;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { LocalizedValue } from '../../model/registry';\n\ndeclare var Globalize: any;\ndeclare var com: any\n\n@Injectable()\nexport class LocalizationService {\n\n    locales: string[] = ['defaultLocale'];\n\n    private parser: any = Globalize.numberParser();\n    private formatter: any = Globalize.numberFormatter();\n\n    getLocales(): string[] {\n        return this.locales;\n    }\n\n    setLocales( locales: string[] ): void {\n        this.locales = locales;\n    }\n\n    create(): LocalizedValue {\n        const value = { localizedValue: '', localeValues: [] } as LocalizedValue;\n\n        this.locales.forEach( locale => {\n            value.localeValues.push( { locale: locale, value: '' } );\n        } );\n\n        return value;\n    }\n\n    public parseNumber( value: string ): number {\n        if ( value != null && value.length > 0 ) {\n            //convert data from view format to model format\n            var number = this.parser( value );\n\n            return number;\n        }\n\n        return null;\n    }\n\n    public formatNumber( value: any ): string {\n        if ( value != null ) {\n            var number = value;\n\n            if ( typeof number === 'string' ) {\n                if ( number.length > 0 && Number( number ) ) {\n                    number = Number( value );\n                }\n                else {\n                    return \"\";\n                }\n            }\n\n            //convert data from model format to view format\n            return this.formatter( number );\n        }\n\n        return null;\n    }\n\n    public localize( bundle: string, key: string ): string {\n        return com.runwaysdk.Localize.localize( bundle, key );\n    }\n\n    public get( key: string ): string {\n        return com.runwaysdk.Localize.get( key );\n    }\n\n    public decode( key: string ): string {\n        let index = key.lastIndexOf( '.' );\n\n        if ( index !== -1 ) {\n\n            let temp = [key.slice( 0, index ), key.slice( index + 1 )]\n\n            return this.localize( temp[0], temp[1] );\n        }\n        else {\n            return this.get( key );\n        }\n    }\n}\n","<div class=\"new-admin-design-main\">\n    <admin-header></admin-header>\n\n    <div id=\"app-container\" class=\"container\">\n\n        <message></message>\n\n        <h2>\n            <localize key=\"accounts.title\"></localize>\n        </h2>\n        <div class=\"row\">\n            <input class=\"btn btn-primary pull-right\" type=\"submit\" value=\"Invite User\" (click)=\"inviteUsers()\">\n            <!-- TODO : Localize -->\n        </div>\n\n        <div class=\"list-table-wrapper\">\n            <table id=\"manage-accounts-table\" class=\"list-table table table-bordered table-striped\">\n                <thead>\n                    <tr>\n                        <th></th>\n                        <th class=\"label-column\">\n                            <localize key='account.username'></localize>\n                        </th>\n                        <th class=\"label-column\">\n                            <localize key='account.firstname'></localize>\n                        </th>\n                        <th class=\"label-column\">\n                            <localize key='account.lastname'></localize>\n                        </th>\n                        <th class=\"label-column\">\n                            <localize key='account.phonenumber'></localize>\n                        </th>\n                        <th class=\"label-column\">\n                            <localize key='account.email'></localize>\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let account of res.resultSet | paginate: { itemsPerPage: 10, currentPage: p, totalItems: res.count }\"\n                        class=\"fade-ngRepeat-item\">\n                        <td class=\"button-column\">\n                            <a class=\"fa fa-pencil ico-edit\" (click)=\"edit(account, $event)\" [title]=\"'account.editTooltip' | localize\"></a>\n                            <a class=\"fa fa-trash-o ico-remove\" [title]=\"'account.removeTooltip' | localize\"\n                                (click)=\"onClickRemove(account, $event)\"></a>\n                        </td>\n                        <td class=\"label-column username-col\"> {{ account.username }} </td>\n                        <td class=\"label-column firstname-col\"> {{ account.firstName }} </td>\n                        <td class=\"label-column lastname-col\"> {{ account.lastName }} </td>\n                        <td class=\"label-column phone-col\"> {{ account.phoneNumber | phone }} </td>\n                        <td class=\"label-column email-col\"> {{ account.email }} </td>\n                    </tr>\n                    <tr>\n                        <td class=\"button-column\">\n                            <a class=\"fa fa-plus\" (click)=\"newInstance()\" [title]=\"'account.newTooltip' | localize\"></a>\n                        </td>\n                    </tr>\n\n                </tbody>\n            </table>\n            <pagination-controls (pageChange)=\"onPageChange($event)\"></pagination-controls>\n        </div>\n    </div>\n</div>","import { Pipe, PipeTransform } from '@angular/core';\nimport { formatNumber, ParsedNumber } from 'libphonenumber-js';\n\n\n@Pipe({\n  name: 'phone'\n})\nexport class PhonePipe implements PipeTransform {\n\n  transform(value: ParsedNumber, args?: string): any {\n    if (!value) {\n      return value;\n    }\n\n    return formatNumber({ country: 'US', phone: value.toString() }, 'International');\n  }\n\n}\n","<div>\n  <admin-header></admin-header>\n\n<div id=\"app-container\" class=\"container\" >\n\n  <message ></message>\n  \n  <div>\n    <span>\n      <h2> <localize key=\"system.image.title\"></localize> </h2>\n    </span>\n  </div>\n  \n  <div class=\"list-table-wrapper\">\n    <table id=\"manage-icons-table\" class=\"list-table table table-bordered table-striped\">        \n      <thead>\n        <tr>\n          <th></th>\n          <th class=\"label-column\"><localize key='system.image.label'></localize></th>\n          <th class=\"label-column\"><localize key='system.image.preview'></localize></th>\n        </tr>\n      </thead>    \n      <tbody>\n        <tr *ngFor=\"let icon of icons\" class=\"fade-ngRepeat-item\">\n          <td class=\"button-column\">\n            <span>\n              <a class=\"fa fa-pencil ico-edit\" (click)=\"edit(icon)\" [title]=\"'system.image.editTooltip' | localize\"></a>\n              <a *ngIf=\"icon.custom\" class=\"fa fa-trash-o ico-remove\" [title]=\"'system.image.removeTooltip' | localize\"\n                 (click)=\"onClickRemove(icon, $event)\"></a>\n            </span>\n          </td>\n          <td class=\"label-column\">{{ icon.label }}</td>\n          <td class=\"icon-thumbnail-column\">\n            <img *ngIf=\"icon.id && icon.id.length > 0\" style=\"width:42px;height:42px;\" class=\"thumb\" [src]=\"context + '/logo/view?id=' + icon.id\" alt=\"Icon\">\n          </td>\n        </tr>      \n      </tbody>    \n    </table>\n  </div>\n  \n  <div *ngIf=\"icons === null\" ><localize key='dataset.loadingData'></localize></div>\n</div>\n\n</div>","<div>\n  <admin-header></admin-header>\n\n<div>\n  <message ></message>\n\n  <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">    \n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"heading\">\n          <h1><localize key=\"system.image.editHeader\"></localize></h1>\n        </div>      \n        <fieldset>\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n            </div>          \n            <div class=\"holder\">\n              <span class=\"text\">\n\n                <div>\n                  <!-- For display only when editing an icon-->\n                  <img *ngIf=\"!file\" style=\"max-width:300px;max-height:300px;\" [src]=\"context + '/logo/view?id=' + id\" class=\"thumb\">\n                      \n                  <!-- Actual uploaded file preview -->\n                  <img *ngIf=\"file\" style=\"max-width:300px;max-height:300px;\" [src]=\"file\" class=\"thumb\">\n                </div>                        \n              \n                <div class=\"drop-box-container\" ng2FileDrop [ngClass]=\"{'drop-active': dropActive}\" (fileOver)=\"fileOver($event)\" [uploader]=\"uploader\" (click)=fileInput.click()>\n                  <div class=\"drop-box\">\n                    <div class=\"inner-drop-box\">\n                      <i class=\"fa fa-cloud-upload\">\n                        <p class=\"upload-text\"><localize key=\"system.image.uploadText\"></localize></p>\n                      </i>\n                    </div>\n                  </div>\n                  <input type=\"file\" #uploadEl ng2FileSelect #fileInput [uploader]=\"uploader\" id=\"uploader-input\" style=\"display:none\" />\n                </div>\n                \n              </span>\n            </div>\n          </div>\n          \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n            </div>                    \n            <div class=\"holder\">\n              <div class=\"button-holder\">\n                <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />              \n                <input type=\"submit\" [value]=\"'category.icon.ok' | localize\" class=\"btn btn-primary\" (disabled)=\"form.invalid\" />                \n              </div>\n            </div>\n          </div>\n        </fieldset>  \n      </div>\n    </div>\n  </form>\n</div>\n\n</div>","<div>\n  <admin-header></admin-header>\n\n<div>\n  <message ></message>  \n\n  <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">    \n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"heading\">\n          <h1><localize key=\"email.modal.heading\"></localize></h1>\n        </div>      \n        <fieldset>            \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"email.server\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"email.server\" name=\"server\" required #server=\"ngModel\">\n              </span>\n              <div *ngIf=\"server.errors?.url\" class=\"inline-error-message\">\n                <localize key=\"email.server.validation\"></localize>\n              </div>                            \n            </div>\n          </div>\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"email.username\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"email.username\" name=\"username\" required>\n              </span>\n            </div>\n          </div>\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"email.password\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"password\" [(ngModel)]=\"email.password\" name=\"password\" required>\n              </span>\n            </div>\n          </div>\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"email.port\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"number\" [(ngModel)]=\"email.port\" name=\"port\" required #port=\"ngModel\" number>\n              </span>\n              <div *ngIf=\"port.errors?.number\" class=\"inline-error-message\">\n                <localize key=\"email.port.validation\"></localize>\n              </div>                                                        \n            </div>\n          </div>          \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"email.from\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"email.from\" name=\"from\" required #from=\"ngModel\" email>\n              </span>\n              <div *ngIf=\"from.errors?.email\" class=\"inline-error-message\">\n                <localize key=\"email.from.validation\"></localize>\n              </div>                                          \n            </div>\n          </div>          \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"email.to\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"email.to\" name=\"to\"  #to=\"ngModel\" email>\n              </span>\n              <div *ngIf=\"to.errors?.email\" class=\"inline-error-message\">\n                <localize key=\"email.to.validation\"></localize>\n              </div>                                                        \n            </div>\n          </div>          \n\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n            </div>                    \n            <div class=\"holder\">\n              <div class=\"button-holder\">\n                <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />              \n                <input type=\"submit\" [value]=\"'dataset.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\" />\n              </div>\n            </div>\n          </div>\n        </fieldset>\n      </div>\n    </div>\n  </form>\n</div>\n\n</div>","<div>\n  <admin-header></admin-header>\n  \n  <message></message>\n\n  <form #form=\"ngForm\" style=\"height:calc(100vh - 144px);padding-bottom: 20px;\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">    \n    <div class=\"modal-dialog\" style=\"height: 100%;\">\n      <div class=\"modal-content\" style=\"height: 100%;overflow-y: auto;\">\n        <fieldset>            \n          <div class=\"heading\">\n            <h3><localize key=\"account.user.heading\"></localize></h3>\n          </div>      \n          <hr>        \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"account.firstname\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"account.user.firstName\" name=\"firstname\" required>\n              </span>\n            </div>\n          </div>          \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"account.lastname\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"account.user.lastName\" name=\"lastname\" required>\n              </span>\n            </div>\n          </div>  \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"account.phonenumber\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"account.user.phoneNumber\" name=\"phoneNumber\" >\n              </span>\n<!--               <div *ngIf=\"aphone.errors?.phone\" class=\"inline-error-message\"> -->\n<!--                 <localize key=\"account.phone.validation\"></localize> -->\n<!--               </div>                                           -->\n            </div>\n          </div>           \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"account.email\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"account.user.email\" name=\"email\" required #aemail=\"ngModel\" email>\n              </span>\n              <div *ngIf=\"aemail.errors?.email && account.user.email && account.user.email.length > 0\" class=\"inline-error-message\">\n                <localize key=\"account.email.validation\"></localize>\n              </div>                                          \n            </div>\n          </div>          \n          <div class=\"heading\">\n            <h3><localize key=\"account.info.heading\"></localize></h3>\n          </div>      \n          <hr>          \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"account.username\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [disabled]=\"!account.user.newInstance && account.user.username === 'admin'\" [(ngModel)]=\"account.user.username\" name=\"username\" required>\n              </span>\n            </div>\n          </div>\n          <div *ngIf=\"!account.user.newInstance\" class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"account.changePassword\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <boolean-field [(value)]=\"account.changePassword\"></boolean-field>\n            </div>\n          </div>                        \n          <div *ngIf=\"account.changePassword || account.user.newInstance\">\n            <div class=\"row-holder\">\n              <div class=\"label-holder\">\n                <label><localize key=\"account.password\"></localize></label>\n              </div>          \n              <div class=\"holder\" >\n                <span class=\"text\">\n                  <input type=\"password\" [(ngModel)]=\"account.user.password\" name=\"password\" #password=\"ngModel\" required minlength=\"5\" maxlength=\"50\" >\n                  <ng2-password-strength-bar\n                    [passwordToCheck]=\"account.user.password\">\n                  </ng2-password-strength-bar>                              \n                </span>\n              </div>\n            </div>  \n            <div class=\"row-holder\">\n              <div class=\"label-holder\">\n                <label><localize key=\"account.certainPassword\"></localize></label>\n              </div>          \n              <div class=\"holder\" >\n                <span class=\"text\">\n                  <input type=\"password\" ngModel name=\"certainPassword\" #certainPassword=\"ngModel\" [equalTo]=\"password\"/>\n                </span>\n                <div *ngIf=\"certainPassword.errors?.equalTo\" class=\"inline-error-message\">\n                  <localize key=\"account.certainPassword.validation\"></localize>\n                </div>                                                       \n              </div>\n            </div>  \n          </div>\n          <div *ngIf=\"!(!account.user.newInstance && account.user.username === 'admin')\">\n            <div class=\"row-holder\">\n              <div class=\"label-holder\">\n                <label><localize key=\"account.inactive\"></localize></label>\n              </div>\n              <div class=\"holder\">\n                <boolean-field [(value)]=\"account.user.inactive\"></boolean-field>\n              </div>\n            </div>\n          </div>\n          <div *ngFor=\"let group of account.groups\">\n            <div class=\"heading\">\n              <h3><localize [key]=\"'com.runwaysdk.ui.userstable.UsersTable.' + group.name\"></localize></h3>\n            </div>                          \n            <hr>\n            <div *ngFor=\"let role of group.roles\" class=\"row-holder\">\n              <div class=\"label-holder\">\n                <label>{{role.displayLabel}}</label>\n              </div>          \n              <div class=\"holder\" >\n                <div class=\"check-block\">\n                  <input type=\"radio\" [value]=\"role.roleId\" [(ngModel)]=\"group.assigned\" [name]=\"group.name\">\n                </div>              \n              </div>\n            </div>              \n          </div>\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n            </div>                    \n            <div class=\"holder\">\n              <div class=\"button-holder\">\n                <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />              \n                <input type=\"submit\" [value]=\"'dataset.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\" />\n              </div>\n            </div>\n          </div>\n        </fieldset>\n      </div>\n    </div>\n  </form>\n</div>\n","<div>\n  <admin-header></admin-header>\n  \n  <message></message>\n\n  <form #form=\"ngForm\" style=\"height:calc(100vh - 144px);padding-bottom: 20px;\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">    \n    <div class=\"modal-dialog\" style=\"height: 100%;\">\n      <div class=\"modal-content\" style=\"height: 100%;overflow-y: auto;\">\n        <fieldset>            \n          <div class=\"heading\">\n            <h3>Invite a User</h3>\n          </div>      \n          <hr>        \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"account.email\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"invite.email\" name=\"email\" required #aemail=\"ngModel\" email>\n              </span>\n              <div *ngIf=\"aemail.errors?.email && invite.email && invite.email.length > 0\" class=\"inline-error-message\">\n                <localize key=\"account.email.validation\"></localize>\n              </div>                                          \n            </div>\n          </div>   \n          <div *ngFor=\"let group of invite.groups\">\n            <div class=\"heading\">\n              <h3><localize [key]=\"'com.runwaysdk.ui.userstable.UsersTable.' + group.name\"></localize></h3>\n            </div>                          \n            <hr>\n            <div *ngFor=\"let role of group.roles\" class=\"row-holder\">\n              <div class=\"label-holder\">\n                <label>{{role.displayLabel}}</label>\n              </div>          \n              <div class=\"holder\" >\n                <boolean-field [(value)]=\"role.assigned\"></boolean-field>\n              </div>\n            </div>              \n          </div>\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n            </div>                    \n            <div class=\"holder\">\n              <div class=\"button-holder\">\n                <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />              \n                <input type=\"submit\" [value]=\"'dataset.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\" />\n              </div>\n            </div>\n          </div>\n        </fieldset>\n      </div>\n    </div>\n  </form>\n</div>\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nexport class UserInvite {\n  email: string;\n  groups:Group[];\n}\n\nexport class User {\n  oid: string;\n  username: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  phoneNumber: string;\n  inactive: boolean;\n  newInstance: boolean;\n}\n\nexport class Role {\n  roleId:string;\n  displayLabel:string;\n  assigned:boolean;\n}\n\nexport class Group {\n  name:string;\n  assigned:string;\n  roles:Role[];\n}\n\nexport class Account {\n  user:User;\n  groups:Group[];\n  changePassword:boolean;\n}\n\nexport class PageResult {\n  count: number;\n  pageNumber: number;\n  pageSize: number;\n  resultSet: User[];\n}","<div>\n  <admin-header></admin-header>\n  \n  <message></message>\n\n  <form #form=\"ngForm\" style=\"height:calc(100vh - 144px);padding-bottom: 20px;\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">    \n    <div class=\"modal-dialog\" style=\"height: 100%;\">\n      <div class=\"modal-content\" style=\"height: 100%;overflow-y: auto;\">\n        <fieldset>            \n          <div class=\"heading\">\n            <h3><localize key=\"user.heading\"></localize></h3>\n          </div>      \n          <hr>        \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"account.firstname\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"user.firstName\" name=\"firstname\" required>\n              </span>\n            </div>\n          </div>          \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"account.lastname\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"user.lastName\" name=\"lastname\" required>\n              </span>\n            </div>\n          </div>  \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"account.phonenumber\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"user.phoneNumber\" name=\"phoneNumber\" >\n              </span>\n<!--               <div *ngIf=\"aphone.errors?.phone\" class=\"inline-error-message\"> -->\n<!--                 <localize key=\"account.phone.validation\"></localize> -->\n<!--               </div>                                           -->\n            </div>\n          </div>           \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"account.email\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"user.email\" name=\"email\" required #aemail=\"ngModel\" email>\n              </span>\n              <div *ngIf=\"aemail.errors?.email && user.email && user.email.length > 0\" class=\"inline-error-message\">\n                <localize key=\"account.email.validation\"></localize>\n              </div>                                          \n            </div>\n          </div>          \n          <div class=\"heading\">\n            <h3><localize key=\"account.info.heading\"></localize></h3>\n          </div>      \n          <hr>          \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"account.username\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [disabled]=\"!user.newInstance && user.username === 'admin'\" [(ngModel)]=\"user.username\" name=\"username\" required>\n              </span>\n            </div>\n          </div>\n          <div>\n            <div class=\"row-holder\">\n              <div class=\"label-holder\">\n                <label><localize key=\"account.password\"></localize></label>\n              </div>          \n              <div class=\"holder\" >\n                <span class=\"text\">\n                  <input type=\"password\" [(ngModel)]=\"user.password\" name=\"password\" #password=\"ngModel\" required minlength=\"5\" maxlength=\"50\" >\n                  <ng2-password-strength-bar\n                    [passwordToCheck]=\"user.password\">\n                  </ng2-password-strength-bar>                              \n                </span>\n              </div>\n            </div>  \n            <div class=\"row-holder\">\n              <div class=\"label-holder\">\n                <label><localize key=\"account.certainPassword\"></localize></label>\n              </div>          \n              <div class=\"holder\" >\n                <span class=\"text\">\n                  <input type=\"password\" ngModel name=\"certainPassword\" #certainPassword=\"ngModel\" [value]=\"password\"/>\n                </span>\n                <div *ngIf=\"certainPassword.errors?.equalTo\" class=\"inline-error-message\">\n                  <localize key=\"account.certainPassword.validation\"></localize>\n                </div>                                                       \n              </div>\n            </div>  \n          </div>\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n            </div>                    \n            <div class=\"holder\">\n              <div class=\"button-holder\">\n                <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />              \n                <input type=\"submit\" [value]=\"'dataset.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\" />\n              </div>\n            </div>\n          </div>\n        </fieldset>\n      </div>\n    </div>\n  </form>\n</div>\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule} from '@angular/common';\nimport { FormsModule} from '@angular/forms';\nimport { XHRBackend, RequestOptions, Http} from '@angular/http';\n\nimport { LocalizeComponent } from './localize/localize.component';\nimport { LocalizePipe } from './localize/localize.pipe';\n\nimport { ErrorMessageComponent } from './message/error-message.component';\nimport { MessageComponent } from './message/message.component';\n\nimport { EventService, IdService, BasicService} from './service/core.service';\nimport { LocalizationService } from './service/localization.service';\nimport { EventHttpService } from './service/event-http.service';\n\nimport { PhonePipe } from './phone.pipe';\n\nimport { CookieService } from 'ngx-cookie-service';\n\nimport { AuthService } from './auth/auth.service';\n\nimport { BooleanFieldComponent } from './form-fields/boolean-field/boolean-field.component';\n\n\n@NgModule({\n  imports: [\n\t  CommonModule,\n\t  FormsModule\n  ],\n  declarations: [\n    LocalizeComponent,\n    LocalizePipe,\n    MessageComponent,\n    PhonePipe,\n    BooleanFieldComponent\n  ],\n  exports: [\n    LocalizeComponent,\n    LocalizePipe,\n    MessageComponent,\n    PhonePipe,\n    BooleanFieldComponent\n  ],\n  providers: [\n        LocalizationService,\n        CookieService, \n        AuthService,\n        EventService,\n        { \n          provide : EventHttpService,\n          useFactory: (xhrBackend: XHRBackend, requestOptions: RequestOptions, service: EventService) => {\n            return new EventHttpService(xhrBackend, requestOptions, service)\n          },\n          deps: [XHRBackend, RequestOptions, EventService]\n        }\n      ],\n  entryComponents: []\n})\nexport class CoreModule {}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { NgModule, Injectable, Inject } from '@angular/core';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\nimport { Routes, RouterModule, Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\n\nimport { EmailComponent } from './email/email.component';\nimport { SystemLogoComponent } from './logo/system-logo.component';\nimport { SystemLogosComponent } from './logo/system-logos.component';\nimport { AccountsComponent } from './account/accounts.component';\nimport { AccountComponent, AccountResolver } from './account/account.component';\n\nimport { AccountInviteComponent } from './account/account-invite.component';\nimport { AccountInviteCompleteComponent } from './account/account-invite-complete.component';\n\ndeclare var acp: any;\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AccountsComponent,   \n    data: { title: 'useraccounts.title' }            \n  },\t\n  {\n    path: 'logos',\n    component: SystemLogosComponent,\n    data: { title: 'System_Configuration' }                \n  },\n  {\n    path: 'logo/:oid',\n    component: SystemLogoComponent,\n    data: { title: 'System_Configuration' }            \n    \n  },\n  {\n    path: 'email',\n    component: EmailComponent,\n    data: { title: 'System_Configuration' }            \n    \n  },\n  {\n    path: 'accounts',\n    component: AccountsComponent,    \n    data: { title: 'useraccounts.title' }                \n  },\n//  {\n//    path: 'geotree',\n//    component: GeoTreeComponent,\n//    data: { title: 'geoEntity.title' }                \n//  },\n//  {\n//    path: 'universaltree',\n//    component: UniversalTreeComponent,\n//    data: { title: 'universal.title' }                \n//  },\n//  {\n//    path: 'classifiertree',\n//    component: ClassifierTreeComponent,\n//    data: { title: 'Term_Ontology_Admin' }                \n//  },\n//  {\n//    path: 'browser',\n//    component: BrowserComponent,\n//    data: { title: 'Data_Browser' }                \n//  },\n  {\n    path: 'account/:oid',\n    component: AccountComponent,\n    resolve: {\n      account: AccountResolver\n    },        \n    data: { title: 'account.title' }\n  },\n  {\n    path: 'invite',\n    component: AccountInviteComponent,    \n    data: { }\n  },\n  {\n    path: 'invite-complete',\n    component: AccountInviteCompleteComponent,    \n    data: { }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [{provide: LocationStrategy, useClass: HashLocationStrategy}, AccountResolver]\n})\nexport class AdminRoutingModule { }\n\nexport const routedComponents = [SystemLogosComponent, SystemLogoComponent, EmailComponent, AccountsComponent, AccountComponent, AccountInviteComponent, AccountInviteCompleteComponent];\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule} from '@angular/forms';\n\nimport { FileUploadModule } from 'ng2-file-upload/ng2-file-upload';\nimport { CustomFormsModule } from 'ng2-validation'\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ModalModule } from 'ngx-bootstrap/modal'\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { PasswordStrengthBarModule } from 'ng2-password-strength-bar';\n\nimport { CoreModule } from '../core/core.module';\n\nimport { SystemLogoService } from './logo/system-logo.service';\nimport { EmailService } from './email/email.service';\nimport { AccountService } from './account/account.service';\nimport { AdminRoutingModule, routedComponents } from './admin-routing.module';\n \nimport { AdminHeaderComponent } from './admin-header.component';\n\nimport { LocalizePipe } from '../core/localize/localize.pipe';\n\nimport { SystemLogoComponent } from './logo/system-logo.component';\nimport { SystemLogosComponent } from './logo/system-logos.component';\n\nimport { BrowserModule } from '@angular/platform-browser';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    FileUploadModule,\n    BsDropdownModule.forRoot(),\n    ModalModule.forRoot(),\n    CoreModule,\n    BrowserModule,\n    NgxPaginationModule,\n    AdminRoutingModule,\n    PasswordStrengthBarModule,\n    CustomFormsModule,\n  ],\n  declarations: [\n\t// Global components\n    AdminHeaderComponent,\n    routedComponents,\n    SystemLogoComponent,\n    SystemLogosComponent\n  ],\n  exports: [\n    AdminHeaderComponent,\n    SystemLogoComponent,\n    SystemLogosComponent\n  ],\n  providers: [\n    SystemLogoService,\n    EmailService,\n    AccountService\n  ]\n})\nexport class AdminModule { }\n","import { Input, Component, OnInit } from '@angular/core';\n\nimport { LocalizationService } from '../service/localization.service';\n\n@Component({\n  \n  selector: 'localize',\n  templateUrl: './localize.component.html',\n  styleUrls: []\n})\nexport class LocalizeComponent implements OnInit {\n  @Input() key: string;\n  text: string;\n    \n  constructor(private service: LocalizationService) { }\n\n  ngOnInit(): void {\n    this.text = this.service.decode(this.key);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { LocalizationService } from '../service/localization.service';\n\n@Pipe({name: 'localize'})\nexport class LocalizePipe implements PipeTransform {\n  constructor(private service: LocalizationService) { }\n\t\n  transform(value: string): string {\n    return this.service.decode(value);\n  }\n}\n\n","{{text}}","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { Headers, Http, Response, URLSearchParams } from '@angular/http';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { EventService, BasicService } from '../../core/service/core.service';\nimport { EventHttpService } from '../../core/service/event-http.service';\n\nimport { Account, User, PageResult, UserInvite } from './account';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class AccountService extends BasicService {\n  \n  constructor(service: EventService, private ehttp: EventHttpService, private http: Http) {\n    super(service); \n  }\n  \n  page(p:number): Promise<PageResult> {\n    let params: URLSearchParams = new URLSearchParams();\n    params.set('number', p.toString());\n    \n    return this.ehttp\n      .get(acp + '/account/page', {search: params})\n      .toPromise()\n      .then(response => {\n        return response.json() as PageResult;\n      })\n      .catch(this.handleError.bind(this));\n  }\n  \n  edit(oid:string): Promise<Account> {\n\n    let headers = new Headers({\n      'Content-Type': 'application/json'\n    });  \n  \n    return this.ehttp\n      .post(acp + '/account/edit', JSON.stringify({oid:oid}), {headers: headers})\n      .toPromise()\n      .then((response: any) => {\n        return response.json() as Account;\n      })\n      .catch(this.handleError.bind(this));      \n  }\n  \n  newInstance(): Promise<Account> {\n    \n    let headers = new Headers({\n      'Content-Type': 'application/json'\n    });  \n    \n    return this.ehttp\n    .post(acp + '/account/newInstance', JSON.stringify({}), {headers: headers})\n    .toPromise()\n    .then((response: any) => {\n      return response.json() as Account;\n    })\n    .catch(this.handleError.bind(this));      \n  }\n  \n  newInvite(): Promise<Account> {\n    \n    let headers = new Headers({\n      'Content-Type': 'application/json'\n    });  \n    \n    return this.ehttp\n    .post(acp + '/account/newInvite', JSON.stringify({}), {headers: headers})\n    .toPromise()\n    .then((response: any) => {\n      return response.json() as Account;\n    })\n    .catch(this.handleError.bind(this));      \n  }\n  \n  remove(oid:string): Promise<Response> {\n    \n    let headers = new Headers({\n      'Content-Type': 'application/json'\n    });  \n    \n    return this.ehttp\n    .post(acp + '/account/remove', JSON.stringify({oid:oid}), {headers: headers})\n    .toPromise()\n    .catch(this.handleError.bind(this));      \n  }\n  \n  apply(user:User, roleIds:string[]): Promise<User> {\n    \n    let headers = new Headers({\n      'Content-Type': 'application/json'\n    });  \n    \n    return this.ehttp\n    .post(acp + '/account/apply', JSON.stringify({account:user, roleIds:roleIds}), {headers: headers})\n    .toPromise()\n    .then((response: any) => {\n      return response.json() as User;\n    })\n    .catch(this.handleError.bind(this));      \n  }\n  \n  unlock(oid:string): Promise<Response> {\n    \n    let headers = new Headers({\n      'Content-Type': 'application/json'\n    });  \n    \n    return this.ehttp\n    .post(acp + '/account/unlock', JSON.stringify({oid:oid}), {headers: headers})\n    .toPromise()\n    .catch(this.handleError.bind(this));      \n  }\n  \n  inviteUser(invite:UserInvite, roleIds:string[]): Promise<Response>\n  {\n    let headers = new Headers({\n      'Content-Type': 'application/json'\n    });  \n    \n    console.log(\"Submitting to inviteUser : \", JSON.stringify({invite: invite, roleIds: roleIds}));\n    \n    return this.ehttp\n    .post(acp + '/account/inviteUser', JSON.stringify({invite: invite, roleIds: roleIds}), {headers: headers})\n    .toPromise()\n    .catch(this.handleError.bind(this));\n  }\n  \n  inviteComplete(user:User, token:string): Promise<Response>\n  {\n    let headers = new Headers({\n      'Content-Type': 'application/json'\n    });  \n    \n    return this.ehttp\n    .post(acp + '/account/inviteComplete', JSON.stringify({user: user, token: token}), {headers: headers})\n    .toPromise()\n    .catch(this.handleError.bind(this));\n  }\n  \n}\n"],"sourceRoot":""}