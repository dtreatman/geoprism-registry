{"version":3,"sources":["webpack:///./src/app/admin/service/account.service.ts","webpack:///./src/app/admin/service/system-logo.service.ts","webpack:///./src/app/admin/component/account/account.component.ts","webpack:///./src/app/admin/component/account/account-invite.component.ts","webpack:///./src/app/admin/component/logo/system-logos.component.ts","webpack:///./src/app/admin/component/logo/system-logo.component.ts","webpack:///./src/app/admin/component/email/email.component.ts","webpack:///./src/app/admin/service/email.service.ts","webpack:///./src/app/admin/component/account/accounts.component.ts","webpack:///./src/app/admin/model/account.ts","webpack:///./src/app/admin/component/account/account-invite-complete.component.ts","webpack:///./src/app/admin/admin.module.ts","webpack:///./src/app/admin/component/logo/system-logos.component.html","webpack:///./src/app/admin/component/logo/system-logo.component.html","webpack:///./src/app/admin/component/email/email.component.html","webpack:///./src/app/admin/component/account/accounts.component.html","webpack:///./src/app/shared/pipe/phone.pipe.ts","webpack:///./src/app/admin/component/account/account.component.html","webpack:///./src/app/admin/component/account/account-invite.component.html","webpack:///./src/app/admin/component/account/account-invite-complete.component.html","webpack:///./src/app/admin/admin-routing.module.ts"],"names":["http","eventService","page","p","params","HttpParams","set","toString","this","start","get","acp","finally","complete","toPromise","edit","oid","headers","HttpHeaders","post","JSON","stringify","newInstance","newUserInstance","newInvite","remove","apply","user","roleIds","account","unlock","inviteUser","invite","inviteComplete","token","AccountService","getIcons","SystemLogoService","service","location","bsModalRef","message","then","data","catch","err","error","ngOnInit","onEdit","Subject","cancel","hide","response","onSubmit","i","groups","length","group","push","assigned","changePassword","password","next","localizedMessage","AccountComponent","route","UserInvite","isRoleValid","getAssignedRoleId","AccountInviteComponent","router","modalService","localizeService","context","onClickRemove","icon","show","ConfirmModalComponent","animated","backdrop","ignoreBackdropClick","content","decode","submitText","onConfirm","subscribe","resp","icons","navigate","custom","SystemLogosComponent","iconService","dropActive","snapshot","options","autoUpload","queueLimit","removeAfterUpload","url","uploader","FileUploader","onBeforeUploadItem","fileItem","onCompleteItem","item","status","onSuccessItem","back","onErrorItem","onBuildItemForm","form","append","ngAfterViewInit","that","onAfterAddingFile","uploadElRef","nativeElement","value","reader","FileReader","onload","e","file","result","readAsDataURL","_file","fileOver","uploadAll","clear","clearQueue","SystemLogoComponent","email","server","username","port","from","to","getInstance","EmailComponent","setting","EmailService","res","resultSet","count","pageNumber","pageSize","filter","h","updatedUserIndex","map","indexOf","onPageChange","inviteUsers","ErrorModalComponent","AccountsComponent","User","Role","Group","Account","PageResult","sub","window","href","AccountInviteCompleteComponent","AdminModule","transform","args","formatNumber","country","phone","PhonePipe","title","AuthGuard","AdminRoutingModule"],"mappings":"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","file":"2.chunk.js","sourcesContent":["///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\n\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/finally';\n\nimport { EventService } from '../../shared/service/event.service'\nimport { MessageContainer } from '../../shared/model/core';\n\nimport { Account, User, PageResult, UserInvite } from '../model/account';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class AccountService {\n\n    constructor( private http: HttpClient, private eventService: EventService ) { }\n\n    page( p: number ): Promise<PageResult> {\n        let params: HttpParams = new HttpParams();\n        params = params.set( 'number', p.toString() );\n\n        this.eventService.start();\n\n        return this.http\n            .get<PageResult>( acp + '/account/page', { params: params } )\n            .finally(() => {\n                this.eventService.complete();\n            } )\n            .toPromise();\n    }\n\n    edit( oid: string ): Promise<Account> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<Account>( acp + '/account/edit', JSON.stringify( { oid: oid } ), { headers: headers } )\n            .finally(() => {\n                this.eventService.complete();\n            } )\n            .toPromise();\n    }\n\n    newInstance(): Promise<Account> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<Account>( acp + '/account/newInstance', JSON.stringify( {} ), { headers: headers } )\n            .finally(() => {\n                this.eventService.complete();\n            } )\n            .toPromise();\n    }\n\n    newUserInstance(): Promise<User> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<User>( acp + '/account/newUserInstance', JSON.stringify( {} ), { headers: headers } )\n            .finally(() => {\n                this.eventService.complete();\n            } )\n            .toPromise();\n    }\n\n    newInvite(): Promise<Account> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<Account>( acp + '/account/newInvite', JSON.stringify( {} ), { headers: headers } )\n            .finally(() => {\n                this.eventService.complete();\n            } )\n            .toPromise();\n    }\n\n    remove( oid: string ): Promise<void> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<void>( acp + '/account/remove', JSON.stringify( { oid: oid } ), { headers: headers } )\n            .finally(() => {\n                this.eventService.complete();\n            } )\n            .toPromise();\n    }\n\n    apply( user: User, roleIds: string[] ): Promise<User> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<User>( acp + '/account/apply', JSON.stringify( { account: user, roleIds: roleIds } ), { headers: headers } )\n            .finally(() => {\n                this.eventService.complete();\n            } )\n            .toPromise();\n    }\n\n    unlock( oid: string ): Promise<void> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<void>( acp + '/account/unlock', JSON.stringify( { oid: oid } ), { headers: headers } )\n            .finally(() => {\n                this.eventService.complete();\n            } )\n            .toPromise();\n    }\n\n    inviteUser( invite: UserInvite, roleIds: string[] ): Promise<void> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n//        console.log( \"Submitting to inviteUser : \", JSON.stringify( { invite: invite, roleIds: roleIds } ) );\n\n        return this.http\n            .post<void>( acp + '/account/inviteUser', JSON.stringify( { invite: invite, roleIds: roleIds } ), { headers: headers } )\n            .finally(() => {\n                this.eventService.complete();\n            } )\n            .toPromise();\n    }\n\n    inviteComplete( user: User, token: string ): Promise<void> {\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<void>( acp + '/account/inviteComplete', JSON.stringify( { user: user, token: token } ), { headers: headers } )\n            .finally(() => {\n                this.eventService.complete();\n            } )\n            .toPromise();\n    }\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpResponse, HttpParams } from '@angular/common/http';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { EventService } from '../../shared/service/event.service'\n\nimport { SystemLogo } from '../model/system-logo';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class SystemLogoService {\n\n    constructor( private http: HttpClient, private eventService: EventService ) { }\n\n    getIcons(): Promise<{ icons: SystemLogo[] }> {\n        this.eventService.start();\n\n        return this.http\n            .get<{ icons: SystemLogo[] }>( acp + '/logo/getAll' )\n            .finally(() => {\n                this.eventService.complete();\n            } )\n            .toPromise();\n    }\n\n    remove( oid: string ): Promise<void> {\n\n        let headers = new HttpHeaders( {\n            'Content-Type': 'application/json'\n        } );\n\n        this.eventService.start();\n\n        return this.http\n            .post<void>( acp + '/logo/remove', JSON.stringify( { oid: oid } ), { headers: headers } )\n            .finally(() => {\n                this.eventService.complete();\n            } )\n            .toPromise();\n    }\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, Input, OnInit } from '@angular/core';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\nimport { Location } from '@angular/common';\nimport 'rxjs/add/operator/switchMap';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\nimport { Subject } from 'rxjs/Subject';\n\nimport { Account, User } from '../../model/account';\nimport { AccountService } from '../../service/account.service';\n\n@Component( {\n    selector: 'account',\n    templateUrl: './account.component.html',\n    styles: ['.modal-form .check-block .chk-area { margin: 10px 0px 0 0;}']\n} )\nexport class AccountComponent implements OnInit {\n\n    message: string = null;\n    account: Account;\n\n    @Input()\n    set oid( oid: string ) {\n        if ( oid === 'NEW' ) {\n            this.service.newInstance().then( data => {\n                this.account = data;\n            } ).catch(( err: HttpErrorResponse ) => {\n                this.error( err );\n            } );\n        }\n        else if ( oid ) {\n            this.service.edit( oid ).then( data => {\n                this.account = data;\n            } ).catch(( err: HttpErrorResponse ) => {\n                this.error( err );\n            } );\n        }\n    }\n\n    public onEdit: Subject<User>;\n\n    constructor(\n        private service: AccountService,\n        private location: Location,\n        public bsModalRef: BsModalRef\n    ) {\n    }\n\n    ngOnInit(): void {\n        // this.account = this.route.snapshot.data['account'];\n\n        this.onEdit = new Subject();\n    }\n\n    cancel(): void {\n        if ( this.account.user.newInstance === true ) {\n            this.bsModalRef.hide();\n        }\n        else {\n            this.service.unlock( this.account.user.oid ).then( response => {\n                this.bsModalRef.hide();\n            } );\n        }\n    }\n\n    onSubmit(): void {\n        let roleIds: string[] = [];\n\n        for ( let i = 0; i < this.account.groups.length; i++ ) {\n            let group = this.account.groups[i];\n\n            roleIds.push( group.assigned );\n            //      for(let j = 0; j < group.roles.length; j++) {\n            //        let role = group.roles[j];\n            //        \n            //        if(role.assigned) {\n            //          roleIds.push(role.roleId);\n            //        }      \n            //      }    \n        }\n\n        if ( !this.account.changePassword && !this.account.user.newInstance ) {\n            delete this.account.user.password;\n        }\n\n        this.service.apply( this.account.user, roleIds ).then( data => {\n            this.onEdit.next( data );\n            this.bsModalRef.hide();\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    public error( err: HttpErrorResponse ): void {\n        // Handle error\n        if ( err !== null ) {\n            this.message = ( err.error.localizedMessage || err.error.message || err.message );\n        }\n\n    }\n\n}","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, EventEmitter, Input, OnInit, OnChanges, Output, Inject, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Params, Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/switchMap';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\n\nimport { Account, UserInvite } from '../../model/account';\n\nimport { AccountService } from '../../service/account.service';\nimport { AccountComponent } from './account.component';\n\n\n@Component( {\n    selector: 'account-invite',\n    templateUrl: './account-invite.component.html',\n    styles: ['.modal-form .check-block .chk-area { margin: 10px 0px 0 0;}']\n} )\nexport class AccountInviteComponent implements OnInit {\n    invite: UserInvite;\n    message: string = null;\n\n    constructor(\n        private service: AccountService,\n        private route: ActivatedRoute,\n        private location: Location,\n        public bsModalRef: BsModalRef ) {\n    }\n\n    ngOnInit(): void {\n        this.invite = new UserInvite();\n\n        this.service.newInvite().then(( account: Account ) => {\n            this.invite.groups = account.groups;\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    cancel(): void {\n        this.bsModalRef.hide();\n    }\n\n    isRoleValid(): boolean {\n        return this.getAssignedRoleId() != null;\n    }\n\n    getAssignedRoleId(): string {\n        if ( this.invite != null && this.invite.groups != null ) {\n            for ( let i = 0; i < this.invite.groups.length; i++ ) {\n                let group = this.invite.groups[i];\n\n                return group.assigned;\n            }\n        }\n\n        return null;\n    }\n\n    onSubmit(): void {\n        let roleIds: string[] = [];\n\n        roleIds.push( this.getAssignedRoleId() );\n\n        this.service.inviteUser( this.invite, roleIds ).then( response => {\n            this.bsModalRef.hide();\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    error( err: HttpErrorResponse ): void {\n        // Handle error\n        if ( err !== null ) {\n            this.message = ( err.error.localizedMessage || err.error.message || err.message );\n        }\n    }\n}","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\n\nimport { ConfirmModalComponent } from '../../../shared/component/modals/confirm-modal.component';\nimport { LocalizationService } from '../../../shared/service/localization.service';\n\nimport { SystemLogo } from '../../model/system-logo';\nimport { SystemLogoService } from '../../service/system-logo.service';\n\ndeclare let acp: string;\n\n@Component({\n  \n  selector: 'system-logos',\n  templateUrl: './system-logos.component.html',\n  styleUrls: []\n})\nexport class SystemLogosComponent implements OnInit {\n  public icons: SystemLogo[];\n  context: string;\n  bsModalRef: BsModalRef;\n  message: string = null;\n\n  constructor(\n    private router: Router,\n    private service: SystemLogoService,\n    private modalService: BsModalService,\n    private localizeService: LocalizationService) {\n\t  \n    this.context = acp as string;    \n  }\n\n  ngOnInit(): void {\n    this.getIcons();    \n  }\n  \n  onClickRemove(icon) : void {\n    this.bsModalRef = this.modalService.show( ConfirmModalComponent, {\n        animated: true,\n        backdrop: true,\n        ignoreBackdropClick: true,\n    } );\n    this.bsModalRef.content.message = this.localizeService.decode( \"system.image.removeContent\" );\n    this.bsModalRef.content.submitText = this.localizeService.decode( \"modal.button.delete\" );\n\n    this.bsModalRef.content.onConfirm.subscribe( data => {\n      this.remove(icon);\n    } );\n  }\n    \n  getIcons() : void {\n    this.service.getIcons().then(resp => {\n        \n      this.icons = resp.icons;        \n    })\n    .catch(( err: HttpErrorResponse ) => {\n      this.error( err );\n    } );\n  }\n  \n  edit(icon: SystemLogo) : void {\n    this.router.navigate(['/admin/logo', icon.oid]);\n  }  \n  \n  remove(icon: SystemLogo) : void {\n    this.service.remove(icon.oid).then(response => {\n      icon.custom = false;\n    })\n    .catch(( err: HttpErrorResponse ) => {\n      this.error( err );\n    } );\n  }  \n  \n  error( err: HttpErrorResponse ): void {\n    // Handle error\n    if ( err !== null ) {\n      this.message = ( err.error.localizedMessage || err.error.message || err.message );\n    }\n  }\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, OnInit, ViewChild, ElementRef, Inject, Input } from '@angular/core';\nimport { ActivatedRoute, Params, Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { FileSelectDirective, FileDropDirective, FileUploader, FileUploaderOptions } from 'ng2-file-upload/ng2-file-upload';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/switchMap';\n\nimport { EventService } from '../../../shared/service/event.service';\nimport { SystemLogoService } from '../../service/system-logo.service';\nimport { SystemLogo } from '../../model/system-logo';\n\ndeclare var acp: any;\n\n@Component( {\n\n    selector: 'system-logo',\n    templateUrl: './system-logo.component.html',\n    styles: []\n} )\nexport class SystemLogoComponent implements OnInit {\n    oid: SystemLogo;\n    message: string = null;\n\n    public uploader: FileUploader;\n    public dropActive: boolean = false;\n\n    @ViewChild( 'uploadEl' )\n    private uploadElRef: ElementRef;\n\n    file: any;\n    context: string;\n\n    constructor(\n        private router: Router,\n        private route: ActivatedRoute,\n        private location: Location,\n        private iconService: SystemLogoService,\n        private eventService: EventService ) {\n        this.context = acp as string;\n    }\n\n    ngOnInit(): void {\n        this.oid = this.route.snapshot.params['oid'];\n\n        let options: FileUploaderOptions = {\n            autoUpload: false,\n            queueLimit: 1,\n            removeAfterUpload: true,\n            url: acp + '/logo/apply'\n        };\n\n        this.uploader = new FileUploader( options );\n        this.uploader.onBeforeUploadItem = ( fileItem: any ) => {\n            this.eventService.start();\n        };\n        this.uploader.onCompleteItem = ( item: any, response: any, status: any, headers: any ) => {\n            this.eventService.complete();\n        };\n        this.uploader.onSuccessItem = ( item: any, response: string, status: number, headers: any ) => {\n            this.location.back();\n        };\n        this.uploader.onErrorItem = ( item: any, response: string, status: number, headers: any ) => {\n            this.error( response );\n        };\n        this.uploader.onBuildItemForm = ( fileItem: any, form: any ) => {\n            form.append( 'oid', this.oid );\n        };\n    }\n\n    ngAfterViewInit() {\n        let that = this;\n\n        this.uploader.onAfterAddingFile = ( item => {\n            this.uploadElRef.nativeElement.value = ''\n\n            let reader = new FileReader();\n            reader.onload = function( e: any ) {\n                that.file = reader.result;\n            };\n            reader.readAsDataURL( item._file );\n        } );\n    }\n\n    fileOver( e: any ): void {\n        this.dropActive = e;\n    }\n\n    cancel(): void {\n        this.location.back();\n    }\n\n    onSubmit(): void {\n        if ( this.file == null ) {\n            this.location.back();\n        }\n        else {\n            this.uploader.uploadAll();\n        }\n    }\n\n    clear(): void {\n        this.file = null;\n\n        this.uploader.clearQueue()\n    }\n\n    error( err: string ): void {\n        // Handle error\n        if ( err !== null ) {\n            this.message = err;\n        }\n    }\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, EventEmitter, Input, OnInit, OnChanges, Output, Inject, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Params, Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { Email } from '../../model/email';\nimport { EmailService } from '../../service/email.service';\n\n\n@Component({\n  \n  selector: 'email',\n  templateUrl: './email.component.html',\n  styleUrls: []\n})\nexport class EmailComponent implements OnInit {\n  message: string = null;\n  public email: Email = {\n    oid:'',\n    server:'',\n    username:'',\n    password:'',\n    port: 0,\n    from:'',\n    to:'',\n  };\n\n  constructor(\n    private service: EmailService,\n    private router: Router,      \n    private route: ActivatedRoute,\n    private location: Location) {\n  }\n\n  ngOnInit(): void {\n    this.service.getInstance().then(email => {\n      this.email = email; \n    });\n  }\n  \n  cancel(): void {    \n    this.location.back();\n  } \n  \n  onSubmit(): void {\n    this.service.apply(this.email)\n      .then(email => {\n        this.location.back();\n      })\n    .catch(( err: HttpErrorResponse ) => {\n      this.error( err );\n    } );\n  }\n  \n  error( err: HttpErrorResponse ): void {\n    // Handle error\n    if ( err !== null ) {\n      this.message = ( err.error.localizedMessage || err.error.message || err.message );\n    }\n  }\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <ehttp://www.gnu.org/licenses/>.\n///\n\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpResponse, HttpParams } from '@angular/common/http';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { EventService } from '../../shared/service/event.service'\n\nimport { Email } from '../model/email';\n\ndeclare var acp: any;\n\n@Injectable()\nexport class EmailService {\n  \n  constructor(private http: HttpClient, private eventService: EventService) {\n  }\n  \n  getInstance(): Promise<Email> {\n    \n    this.eventService.start();\n    \n    return this.http\n      .get<Email>(acp + '/email/getInstance')\n      .finally(() => {\n        this.eventService.complete();\n      } )\n      .toPromise();\n  }  \n  \n  apply(email:Email): Promise<Email> {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    \n    this.eventService.start();\n  \n    return this.http\n      .post<Email>(acp + '/email/apply', JSON.stringify({setting:email}), {headers: headers})\n      .finally(() => {\n        this.eventService.complete();\n      } )\n      .toPromise();\n  }  \n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\n\nimport { ConfirmModalComponent } from '../../../shared/component/modals/confirm-modal.component';\nimport { ErrorModalComponent } from '../../../shared/component/modals/error-modal.component';\nimport { LocalizationService } from '../../../shared/service/localization.service';\n\nimport { User, PageResult, Account } from '../../model/account';\nimport { AccountService } from '../../service/account.service';\nimport { AccountComponent } from './account.component';\nimport { AccountInviteComponent } from './account-invite.component';\n\ndeclare let acp: string;\n\n@Component( {\n    selector: 'accounts',\n    templateUrl: './accounts.component.html',\n    styles: ['./accounts.css']\n} )\nexport class AccountsComponent implements OnInit {\n    res: PageResult = {\n        resultSet: [],\n        count: 0,\n        pageNumber: 1,\n        pageSize: 10\n    };\n    bsModalRef: BsModalRef;\n    message: string = null;\n\n    constructor(\n        private router: Router,\n        private service: AccountService,\n        private modalService: BsModalService,\n        private localizeService: LocalizationService\n    ) { }\n\n    ngOnInit(): void {\n        this.service.page( 1 ).then( res => {\n            this.res = res;\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    remove( user: User ): void {\n        this.service.remove( user.oid ).then( response => {\n            this.res.resultSet = this.res.resultSet.filter( h => h.oid !== user.oid );\n        } )\n            .catch(( err: HttpErrorResponse ) => {\n                this.error( err );\n            } );\n    }\n\n    onClickRemove( account: User ): void {\n        this.bsModalRef = this.modalService.show( ConfirmModalComponent, {\n            animated: true,\n            backdrop: true,\n            ignoreBackdropClick: true,\n        } );\n        this.bsModalRef.content.message = this.localizeService.decode( \"account.removeContent\" );\n        this.bsModalRef.content.submitText = this.localizeService.decode( \"modal.button.delete\" );\n\n        this.bsModalRef.content.onConfirm.subscribe( data => {\n            this.remove( account );\n        } );\n    }\n\n    edit( user: User ): void {\n        // this.router.navigate(['/admin/account', user.oid]);\n\n        this.bsModalRef = this.modalService.show( AccountComponent, {\n            animated: true,\n            backdrop: true,\n            ignoreBackdropClick: true,\n        } );\n        this.bsModalRef.content.oid = user.oid;\n\n        let that = this;\n        ( <AccountComponent>this.bsModalRef.content ).onEdit.subscribe( data => {\n            let updatedUserIndex = that.res.resultSet.map(\n                function( e ) { return e.oid; }\n            ).indexOf( data.oid );\n\n            if ( updatedUserIndex !== -1 ) {\n                that.res.resultSet[updatedUserIndex] = data;\n            }\n        } );\n    }\n\n    newInstance(): void {\n        // this.router.navigate(['/admin/account', 'NEW']);\n\n        this.bsModalRef = this.modalService.show( AccountComponent, {\n            animated: true,\n            backdrop: true,\n            ignoreBackdropClick: true,\n        } );\n        this.bsModalRef.content.oid = 'NEW';\n\n        let that = this;\n        this.bsModalRef.content.onEdit.subscribe( data => {\n            this.onPageChange( this.res.pageNumber );\n        } );\n\n    }\n\n    onPageChange( pageNumber: number ): void {\n        this.service.page( pageNumber ).then( res => {\n            this.res = res;\n        } ).catch(( err: HttpErrorResponse ) => {\n            this.error( err );\n        } );\n    }\n\n    inviteUsers(): void {\n        // this.router.navigate(['/admin/invite']);\t  \n\n        this.bsModalRef = this.modalService.show( AccountInviteComponent, {\n            animated: true,\n            backdrop: true,\n            ignoreBackdropClick: true,\n        } );\n    }\n\n    public error( err: HttpErrorResponse ): void {\n        // Handle error\n        if ( err !== null ) {\n            // TODO: add error modal\n            this.bsModalRef = this.modalService.show( ErrorModalComponent, { backdrop: true } );\n            this.bsModalRef.content.message = ( err.error.localizedMessage || err.error.message || err.message );\n        }\n\n    }\n}\n","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nexport class UserInvite {\n  email: string;\n  groups:Group[];\n}\n\nexport class User {\n  oid: string;\n  username: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  phoneNumber: string;\n  inactive: boolean;\n  newInstance: boolean;\n  roles: string[];\n}\n\nexport class Role {\n  roleId:string;\n  displayLabel:string;\n  assigned:boolean;\n}\n\nexport class Group {\n  name:string;\n  assigned:string;\n  roles:Role[];\n}\n\nexport class Account {\n  user:User;\n  groups:Group[];\n  changePassword:boolean;\n}\n\nexport class PageResult {\n  count: number;\n  pageNumber: number;\n  pageSize: number;\n  resultSet: User[];\n}","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { Component, EventEmitter, Input, OnInit, OnChanges, Output, Inject, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Params, Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/switchMap';\n\nimport { User, PageResult, Account } from '../../model/account';\nimport { AccountService } from '../../service/account.service';\n\ndeclare let acp: string;\n\n@Component({\n  selector: 'account-invite-complete',\n  templateUrl: './account-invite-complete.component.html',\n  styles: ['.modal-form .check-block .chk-area { margin: 10px 0px 0 0;}']\n})\nexport class AccountInviteCompleteComponent implements OnInit {\n  user:User;\n  private sub: any;\n  token: string;\n  message: string = null;\n  \n  constructor(\n    private service:AccountService,\n    private route:ActivatedRoute,\n    private location:Location) {\n  }\n\n  ngOnInit(): void {\n    this.service.newUserInstance().then((user:User) => {\n      this.user = user;\n    })\n    .catch(( err: HttpErrorResponse ) => {\n      this.error( err );\n    } );\n    \n    this.sub = this.route.params.subscribe(params => {\n       this.token = params['token'];\n    });\n  }\n  \n  cancel(): void {\n    window.location.href = acp;\n  } \n  \n  onSubmit(): void {\n    this.service.inviteComplete(this.user, this.token).then(response => {\n      window.location.href = acp;\n    })\n    .catch(( err: HttpErrorResponse ) => {\n      this.error( err );\n    } );\n  }  \n  \n  error( err: HttpErrorResponse ): void {\n    // Handle error\n    if ( err !== null ) {\n      this.message = ( err.error.localizedMessage || err.error.message || err.message );\n    }\n  }\n}","///\n/// Copyright (c) 2015 TerraFrame, Inc. All rights reserved.\n///\n/// This file is part of Runway SDK(tm).\n///\n/// Runway SDK(tm) is free software: you can redistribute it and/or modify\n/// it under the terms of the GNU Lesser General Public License as\n/// published by the Free Software Foundation, either version 3 of the\n/// License, or (at your option) any later version.\n///\n/// Runway SDK(tm) is distributed in the hope that it will be useful, but\n/// WITHOUT ANY WARRANTY; without even the implied warranty of\n/// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n/// GNU Lesser General Public License for more details.\n///\n/// You should have received a copy of the GNU Lesser General Public\n/// License along with Runway SDK(tm).  If not, see <http://www.gnu.org/licenses/>.\n///\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { FileUploadModule } from 'ng2-file-upload/ng2-file-upload';\nimport { CustomFormsModule } from 'ng2-validation'\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ModalModule } from 'ngx-bootstrap/modal'\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { PasswordStrengthBarModule } from 'ng2-password-strength-bar';\n\nimport { SystemLogoService } from './service/system-logo.service';\nimport { EmailService } from './service/email.service';\nimport { AccountService } from './service/account.service';\n\nimport { AccountsComponent } from './component/account/accounts.component';\nimport { AccountInviteComponent } from './component/account/account-invite.component';\nimport { AccountInviteCompleteComponent } from './component/account/account-invite-complete.component';\nimport { AccountComponent } from './component/account/account.component';\nimport { SystemLogoComponent } from './component/logo/system-logo.component';\nimport { SystemLogosComponent } from './component/logo/system-logos.component';\nimport { EmailComponent } from './component/email/email.component';\n\nimport { AdminRoutingModule } from './admin-routing.module';\n\nimport { SharedModule } from '../shared/shared.module';\n\nimport '../rxjs-extensions';\n\n@NgModule( {\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        FileUploadModule,\n        NgxPaginationModule,\n        PasswordStrengthBarModule,\n        CustomFormsModule,\n        SharedModule,\n        AdminRoutingModule\n    ],\n    declarations: [\n        // Global components\n        SystemLogoComponent,\n        SystemLogosComponent,\n        AccountsComponent,\n        AccountInviteCompleteComponent,\n        AccountInviteComponent,\n        AccountComponent,\n        SystemLogoComponent,\n        SystemLogosComponent,\n        EmailComponent\n    ],\n    exports: [\n        SystemLogoComponent,\n        SystemLogosComponent\n    ],\n    providers: [\n        SystemLogoService,\n        EmailService,\n        AccountService\n    ],\n    entryComponents: [\n        AccountInviteComponent,\n        AccountComponent\n    ]\n} )\nexport class AdminModule { }\n","<div>\n  <cgr-header></cgr-header>\n\n<div id=\"app-container\" class=\"container\" >\n\n  <message ></message>\n  <loading-bar></loading-bar>\n  \n  <div>\n    <span>\n      <h2> <localize key=\"system.image.title\"></localize> </h2>\n    </span>\n  </div>\n  \n  <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n  \n  <div class=\"list-table-wrapper\">\n    <table id=\"manage-icons-table\" class=\"list-table table table-bordered table-striped\">        \n      <thead>\n        <tr>\n          <th></th>\n          <th class=\"label-column\"><localize key='system.image.label'></localize></th>\n          <th class=\"label-column\"><localize key='system.image.preview'></localize></th>\n        </tr>\n      </thead>    \n      <tbody>\n        <tr *ngFor=\"let icon of icons\" class=\"fade-ngRepeat-item\">\n          <td class=\"button-column\">\n            <span>\n              <a class=\"fa fa-pencil ico-edit\" (click)=\"edit(icon)\" [title]=\"'system.image.editTooltip' | localize\"></a>\n              <a *ngIf=\"icon.custom\" class=\"fa fa-trash-o ico-remove\" [title]=\"'system.image.removeTooltip' | localize\"\n                 (click)=\"onClickRemove(icon, $event)\"></a>\n            </span>\n          </td>\n          <td class=\"label-column\">{{ icon.label }}</td>\n          <td class=\"icon-thumbnail-column\">\n            <img style=\"width:42px;height:42px;\" class=\"thumb\" [src]=\"context + '/logo/view?id=' + icon.id\" alt=\"Icon\">\n          </td>\n        </tr>      \n      </tbody>    \n    </table>\n  </div>\n  \n  <div *ngIf=\"icons === null\" ><localize key='dataset.loadingData'></localize></div>\n</div>\n\n</div>","<div>\n  <cgr-header></cgr-header>\n\n<div>\n  <message ></message>\n  <loading-bar></loading-bar>\n\n  <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">    \n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"heading\">\n          <h1><localize key=\"system.image.editHeader\"></localize></h1>\n        </div>      \n        \n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n        \n        <fieldset>\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n            </div>          \n            <div class=\"holder\">\n              <span class=\"text\">\n\n                <div>\n                  <!-- For display only when editing an icon-->\n                  <img *ngIf=\"!file\" style=\"max-width:300px;max-height:300px;\" [src]=\"context + '/logo/view?id=' + id\" class=\"thumb\">\n                      \n                  <!-- Actual uploaded file preview -->\n                  <img *ngIf=\"file\" style=\"max-width:300px;max-height:300px;\" [src]=\"file\" class=\"thumb\">\n                </div>                        \n              \n                <div class=\"drop-box-container\" ng2FileDrop [ngClass]=\"{'drop-active': dropActive}\" (fileOver)=\"fileOver($event)\" [uploader]=\"uploader\" (click)=fileInput.click()>\n                  <div class=\"drop-box\">\n                    <div class=\"inner-drop-box\">\n                      <i class=\"fa fa-cloud-upload\">\n                        <p class=\"upload-text\"><localize key=\"system.image.uploadText\"></localize></p>\n                      </i>\n                    </div>\n                  </div>\n                  <input type=\"file\" #uploadEl ng2FileSelect #fileInput [uploader]=\"uploader\" id=\"uploader-input\" style=\"display:none\" />\n                </div>\n                \n              </span>\n            </div>\n          </div>\n          \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n            </div>                    \n            <div class=\"holder\">\n              <div class=\"button-holder\">\n                <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />              \n                <input type=\"submit\" [value]=\"'category.icon.ok' | localize\" class=\"btn btn-primary\" (disabled)=\"form.invalid\" />                \n              </div>\n            </div>\n          </div>\n        </fieldset>  \n      </div>\n    </div>\n  </form>\n</div>\n\n</div>","<div>\n  <cgr-header></cgr-header>\n\n<div>\n  <message ></message>  \n  <loading-bar></loading-bar>\n  \n  <form #form=\"ngForm\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">    \n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n        <div class=\"heading\">\n          <h1><localize key=\"email.modal.heading\"></localize></h1>\n        </div>      \n        <fieldset>            \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"email.server\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"email.server\" name=\"server\" required #server=\"ngModel\">\n              </span>\n              <div *ngIf=\"server.errors?.url\" class=\"inline-error-message\">\n                <localize key=\"email.server.validation\"></localize>\n              </div>                            \n            </div>\n          </div>\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"email.username\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"email.username\" name=\"username\" required>\n              </span>\n            </div>\n          </div>\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"email.password\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"password\" [(ngModel)]=\"email.password\" name=\"password\" required>\n              </span>\n            </div>\n          </div>\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"email.port\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"number\" [(ngModel)]=\"email.port\" name=\"port\" required #port=\"ngModel\" number>\n              </span>\n              <div *ngIf=\"port.errors?.number\" class=\"inline-error-message\">\n                <localize key=\"email.port.validation\"></localize>\n              </div>                                                        \n            </div>\n          </div>          \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"email.from\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"email.from\" name=\"from\" required #from=\"ngModel\" email>\n              </span>\n              <div *ngIf=\"from.errors?.email\" class=\"inline-error-message\">\n                <localize key=\"email.from.validation\"></localize>\n              </div>                                          \n            </div>\n          </div>          \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"email.to\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"email.to\" name=\"to\"  #to=\"ngModel\" email>\n              </span>\n              <div *ngIf=\"to.errors?.email\" class=\"inline-error-message\">\n                <localize key=\"email.to.validation\"></localize>\n              </div>                                                        \n            </div>\n          </div>          \n\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n            </div>                    \n            <div class=\"holder\">\n              <div class=\"button-holder\">\n                <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />              \n                <input type=\"submit\" [value]=\"'dataset.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\" />\n              </div>\n            </div>\n          </div>\n        </fieldset>\n      </div>\n    </div>\n  </form>\n</div>\n\n</div>","<div class=\"new-admin-design-main\">\n    <cgr-header></cgr-header>\n\n    <div id=\"app-container\" class=\"container-fluid\">\n\n        <message></message>\n        <!-- <loading-bar></loading-bar> -->\n\n        <h2>\n            <localize key=\"accounts.title\"></localize>\n        </h2>\n\n        <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n\n        <div class=\"row\">\n            <input class=\"btn btn-primary pull-right\" style=\"margin-right: 15px;\" type=\"submit\" value=\"Invite User\" (click)=\"inviteUsers()\">\n            <!-- TODO : Localize -->\n        </div>\n\n        <pagination-controls (pageChange)=\"onPageChange($event)\"></pagination-controls>\n        <div class=\"list-table-wrapper\">\n            <table id=\"manage-accounts-table\" class=\"list-table table table-bordered table-striped\">\n                <thead>\n                    <tr>\n                        <th></th>\n                        <th class=\"label-column\"><localize key='account.username'></localize></th>\n                        <th class=\"label-column\"><localize key='account.firstname'></localize></th>\n                        <th class=\"label-column\"><localize key='account.lastname'></localize></th>\n                        <th class=\"label-column\"><localize key='account.phonenumber'></localize></th>\n                        <th class=\"label-column\"><localize key='account.email'></localize></th>\n                        <th class=\"label-column\"><localize key='account.roles'></localize></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let account of res.resultSet | paginate: { itemsPerPage: res.pageSize, currentPage: res.pageNumber, totalItems: res.count }\" class=\"fade-ngRepeat-item\">\n                        <td class=\"button-column\"><a class=\"fa fa-pencil ico-edit\" (click)=\"edit(account, $event)\" [title]=\"'account.editTooltip' | localize\"></a> <a class=\"fa fa-trash-o ico-remove\" [title]=\"'account.removeTooltip' | localize\" (click)=\"onClickRemove(account, $event)\"></a></td>\n                        <td class=\"label-column username-col\">{{ account.username }}</td>\n                        <td class=\"label-column firstname-col\">{{ account.firstName }}</td>\n                        <td class=\"label-column lastname-col\">{{ account.lastName }}</td>\n                        <td class=\"label-column phone-col\">{{ account.phoneNumber | phone }}</td>\n                        <td class=\"label-column email-col\">{{ account.email }}</td>\n                        <td class=\"label-column role-col\">{{ account.roles }}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"button-column\"><a class=\"fa fa-plus\" (click)=\"newInstance()\" [title]=\"'account.newTooltip' | localize\"></a></td>\n                    </tr>\n\n                </tbody>\n            </table>\n        </div>\n        <pagination-controls (pageChange)=\"onPageChange($event)\"></pagination-controls>\n    </div>\n</div>","import { Pipe, PipeTransform } from '@angular/core';\nimport { formatNumber, ParsedNumber } from 'libphonenumber-js';\n\n\n@Pipe({\n  name: 'phone'\n})\nexport class PhonePipe implements PipeTransform {\n\n  transform(value: ParsedNumber, args?: string): any {\n    if (!value) {\n      return value;\n    }\n\n    return formatNumber({ country: 'US', phone: value.toString() }, 'International');\n  }\n\n}\n","<div>\n  <!-- <header></header> -->\n  \n  <message></message>\n\n  <loading-bar></loading-bar>\n\n  <form *ngIf=\"account\" #form=\"ngForm\" style=\"height:calc(100vh - 144px);padding-bottom: 20px;overflow-y: auto;\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">    \n    <!-- <div class=\"modal-dialog\" style=\"height: 100%;\"> -->\n      <!-- <div *ngIf=\"account\" class=\"modal-content\" style=\"height: 100%;overflow-y: auto;\"> -->\n        <fieldset>            \n          <div class=\"heading\">\n            <h3><localize key=\"account.user.heading\"></localize></h3>\n          </div>      \n          \n          <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n          \n          <hr>        \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"account.firstname\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"account.user.firstName\" name=\"firstname\" required>\n              </span>\n            </div>\n          </div>          \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"account.lastname\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"account.user.lastName\" name=\"lastname\" required>\n              </span>\n            </div>\n          </div>  \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"account.phonenumber\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"account.user.phoneNumber\" name=\"phoneNumber\" >\n              </span>\n<!--               <div *ngIf=\"aphone.errors?.phone\" class=\"inline-error-message\"> -->\n<!--                 <localize key=\"account.phone.validation\"></localize> -->\n<!--               </div>                                           -->\n            </div>\n          </div>           \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"account.email\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"account.user.email\" name=\"email\" required #aemail=\"ngModel\" email>\n              </span>\n              <div *ngIf=\"aemail.errors?.email && account.user.email && account.user.email.length > 0\" class=\"inline-error-message\">\n                <localize key=\"account.email.validation\"></localize>\n              </div>                                          \n            </div>\n          </div>          \n          <div class=\"heading\">\n            <h3><localize key=\"account.info.heading\"></localize></h3>\n          </div>      \n          <hr>          \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"account.username\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [disabled]=\"!account.user.newInstance && account.user.username === 'admin'\" [(ngModel)]=\"account.user.username\" name=\"username\" required>\n              </span>\n            </div>\n          </div>\n          <div *ngIf=\"!account.user.newInstance\" class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"account.changePassword\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <boolean-field [(value)]=\"account.changePassword\"></boolean-field>\n            </div>\n          </div>                        \n          <div *ngIf=\"account.changePassword || account.user.newInstance\">\n            <div class=\"row-holder\">\n              <div class=\"label-holder\">\n                <label><localize key=\"account.password\"></localize></label>\n              </div>          \n              <div class=\"holder\" >\n                <span class=\"text\">\n                  <input type=\"password\" [(ngModel)]=\"account.user.password\" name=\"password\" #password=\"ngModel\" required minlength=\"5\" maxlength=\"50\" >\n                  <ng2-password-strength-bar\n                    [passwordToCheck]=\"account.user.password\">\n                  </ng2-password-strength-bar>                              \n                </span>\n              </div>\n            </div>  \n            <div class=\"row-holder\">\n              <div class=\"label-holder\">\n                <label><localize key=\"account.certainPassword\"></localize></label>\n              </div>          \n              <div class=\"holder\" >\n                <span class=\"text\">\n                  <input type=\"password\" ngModel name=\"certainPassword\" #certainPassword=\"ngModel\" [equalTo]=\"password\"/>\n                </span>\n                <div *ngIf=\"certainPassword.errors?.equalTo\" class=\"inline-error-message\">\n                  <localize key=\"account.certainPassword.validation\"></localize>\n                </div>                                                       \n              </div>\n            </div>  \n          </div>\n          <div *ngIf=\"!(!account.user.newInstance && account.user.username === 'admin')\">\n            <div class=\"row-holder\">\n              <div class=\"label-holder\">\n                <label><localize key=\"account.inactive\"></localize></label>\n              </div>\n              <div class=\"holder\">\n                <boolean-field [(value)]=\"account.user.inactive\"></boolean-field>\n              </div>\n            </div>\n          </div>\n          <div *ngFor=\"let group of account.groups\">\n            <div class=\"heading\">\n              <h3><localize [key]=\"'com.runwaysdk.ui.userstable.UsersTable.' + group.name\"></localize></h3>\n            </div>                          \n            <hr>\n            <div *ngFor=\"let role of group.roles\" class=\"row-holder\">\n              <div class=\"label-holder\">\n                <label>{{role.displayLabel}}</label>\n              </div>          \n              <div class=\"holder\" >\n                <div class=\"check-block\">\n                  <input type=\"radio\" [value]=\"role.roleId\" [(ngModel)]=\"group.assigned\" [name]=\"group.name\">\n                </div>              \n              </div>\n            </div>              \n          </div>\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n            </div>                    \n            <div class=\"holder\">\n              <div class=\"button-holder\">\n                <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />              \n                <input type=\"submit\" [value]=\"'dataset.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\" />\n              </div>\n            </div>\n          </div>\n        </fieldset>\n      <!-- </div> -->\n    <!-- </div> -->\n  </form>\n</div>\n","<div>\n  <!-- <header></header> -->\n  \n  <message></message>\n  <loading-bar></loading-bar>\n\n  <form #form=\"ngForm\" style=\"height:calc(100vh - 144px);padding-bottom: 20px;overflow-y: auto;\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">    \n    <!-- <div class=\"modal-dialog\" style=\"height: 100%;\"> -->\n      <!-- <div class=\"modal-content\" style=\"height: 100%;overflow-y: auto;\"> -->\n        <fieldset>            \n          <div class=\"heading\">\n            <h3>Invite a User</h3>\n          </div>      \n          <hr>        \n          \n          <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n          \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"account.email\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"invite.email\" name=\"email\" required #aemail=\"ngModel\" email>\n              </span>\n              <div *ngIf=\"aemail.errors?.email && invite.email && invite.email.length > 0\" class=\"inline-error-message\">\n                <localize key=\"account.email.validation\"></localize>\n              </div>                                          \n            </div>\n          </div>   \n          <div *ngFor=\"let group of invite.groups\">\n            <div class=\"heading\">\n              <h3><localize [key]=\"'com.runwaysdk.ui.userstable.UsersTable.' + group.name\"></localize></h3>\n            </div>                          \n            <hr>\n            <div *ngFor=\"let role of group.roles\" class=\"row-holder\">\n              <div class=\"label-holder\">\n                <label>{{role.displayLabel}}</label>\n              </div>\n              <div class=\"holder\" style=\"padding: 0 0 0 12px\" >\n                <input style=\"margin: 0 0 0 0; padding: 0 0 0 0\" type=\"radio\" [value]=\"role.roleId\" [(ngModel)]=\"group.assigned\" [name]=\"group.name\">\n              </div>\n            </div>              \n          </div>\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n            </div>                    \n            <div class=\"holder\">\n              <div class=\"button-holder\">\n                <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />              \n                <input type=\"submit\" [value]=\"'dataset.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid && this.isRoleValid())\" />\n              </div>\n            </div>\n          </div>\n        </fieldset>\n      <!-- </div> -->\n    <!-- </div> -->\n  </form>\n</div>\n","<div>\n<!-- \n  <header [loggedIn]=false></header>\n -->\n  <header ></header>\n  \n  <message></message>\n  <loading-bar></loading-bar>\n\n  <form #form=\"ngForm\" style=\"height:calc(100vh - 144px);padding-bottom: 20px;\" class=\"modal-form\" (ngSubmit)=\"form.valid && onSubmit()\">    \n    <div class=\"modal-dialog\" style=\"height: 100%;\">\n      <div class=\"modal-content\" style=\"height: 100%;overflow-y: auto;\">\n        <fieldset>            \n          <div class=\"heading\">\n            <h3><localize key=\"user.heading\"></localize></h3>\n          </div>      \n          <hr>        \n          \n          <div *ngIf=\"message != null\" class=\"alert alert-danger\" role=\"alert\">{{message}}</div>\n          \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"account.firstname\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"user.firstName\" name=\"firstname\" required>\n              </span>\n            </div>\n          </div>          \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"account.lastname\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"user.lastName\" name=\"lastname\" required>\n              </span>\n            </div>\n          </div>  \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"account.phonenumber\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"user.phoneNumber\" name=\"phoneNumber\" >\n              </span>\n<!--               <div *ngIf=\"aphone.errors?.phone\" class=\"inline-error-message\"> -->\n<!--                 <localize key=\"account.phone.validation\"></localize> -->\n<!--               </div>                                           -->\n            </div>\n          </div>           \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"account.email\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [(ngModel)]=\"user.email\" name=\"email\" required #aemail=\"ngModel\" email>\n              </span>\n              <div *ngIf=\"aemail.errors?.email && user.email && user.email.length > 0\" class=\"inline-error-message\">\n                <localize key=\"account.email.validation\"></localize>\n              </div>                                          \n            </div>\n          </div>          \n          <div class=\"heading\">\n            <h3><localize key=\"account.info.heading\"></localize></h3>\n          </div>      \n          <hr>          \n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n              <label><localize key=\"account.username\"></localize></label>\n            </div>          \n            <div class=\"holder\" >\n              <span class=\"text\">\n                <input type=\"text\" [disabled]=\"!user.newInstance && user.username === 'admin'\" [(ngModel)]=\"user.username\" name=\"username\" required>\n              </span>\n            </div>\n          </div>\n          <div>\n            <div class=\"row-holder\">\n              <div class=\"label-holder\">\n                <label><localize key=\"account.password\"></localize></label>\n              </div>          \n              <div class=\"holder\" >\n                <span class=\"text\">\n                  <input type=\"password\" [(ngModel)]=\"user.password\" name=\"password\" #password=\"ngModel\" required minlength=\"5\" maxlength=\"50\" >\n                  <ng2-password-strength-bar\n                    [passwordToCheck]=\"user.password\">\n                  </ng2-password-strength-bar>                              \n                </span>\n              </div>\n            </div>  \n            <div class=\"row-holder\">\n              <div class=\"label-holder\">\n                <label><localize key=\"account.certainPassword\"></localize></label>\n              </div>          \n              <div class=\"holder\" >\n                <span class=\"text\">\n                  <input type=\"password\" ngModel name=\"certainPassword\" #certainPassword=\"ngModel\" [value]=\"password\"/>\n                </span>\n                <div *ngIf=\"certainPassword.errors?.equalTo\" class=\"inline-error-message\">\n                  <localize key=\"account.certainPassword.validation\"></localize>\n                </div>                                                       \n              </div>\n            </div>  \n          </div>\n          <div class=\"row-holder\">\n            <div class=\"label-holder\">\n            </div>                    \n            <div class=\"holder\">\n              <div class=\"button-holder\">\n                <input type=\"button\" [value]=\"'dataset.cancel' | localize\" class=\"btn btn-default\" (click)=\"cancel()\" />              \n                <input type=\"submit\" [value]=\"'dataset.submit' | localize\" class=\"btn btn-primary\" [disabled]=\"!(form.valid)\" />\n              </div>\n            </div>\n          </div>\n        </fieldset>\n      </div>\n    </div>\n  </form>\n</div>\n","import { NgModule, Injectable, Inject } from '@angular/core';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\nimport { Routes, RouterModule, Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\n\nimport { AuthGuard, AdminGuard, MaintainerGuard, ContributerGuard } from '../shared/service/guard.service';\nimport { PendingChangesGuard } from \"../shared/service/pending-changes-guard\";\n\nimport { AccountsComponent } from './component/account/accounts.component';\nimport { AccountInviteComponent } from './component/account/account-invite.component';\nimport { AccountInviteCompleteComponent } from './component/account/account-invite-complete.component';\nimport { AccountComponent } from './component/account/account.component';\nimport { SystemLogoComponent } from './component/logo/system-logo.component';\nimport { SystemLogosComponent } from './component/logo/system-logos.component';\nimport { EmailComponent } from './component/email/email.component';\n\n\nconst routes: Routes = [\n    {\n        path: 'logos',\n        canActivate: [AuthGuard],\n        component: SystemLogosComponent,\n        data: { title: 'System_Configuration' }\n    },\n    {\n        path: 'logo/:oid',\n        canActivate: [AuthGuard],\n        component: SystemLogoComponent,\n        data: { title: 'System_Configuration' }\n\n    },\n    {\n        path: 'email',\n        canActivate: [AuthGuard],\n        component: EmailComponent,\n        data: { title: 'System_Configuration' }\n\n    },\n    {\n        path: '',\n        canActivate: [AuthGuard],\n        component: AccountsComponent,\n        data: { title: 'useraccounts.title' }\n    },    \n    {\n        path: 'accounts',\n        canActivate: [AuthGuard],\n        component: AccountsComponent,\n        data: { title: 'useraccounts.title' }\n    },\n    {\n        path: 'account/:oid',\n        component: AccountComponent,\n        //   resolve: {\n        //     account: AccountResolver\n        //   },        \n        canActivate: [AuthGuard],\n        data: { title: 'account.title' }\n    },\n    {\n        path: 'invite',\n        component: AccountInviteComponent,\n        data: { title: 'account.title' }\n    },\n    {\n        path: 'invite-complete/:token',\n        component: AccountInviteCompleteComponent,\n        data: { title: 'account.title' }\n    }\n];\n\n@NgModule( {\n    imports: [RouterModule.forChild( routes )],\n    exports: [RouterModule],\n    providers: [\n        { provide: LocationStrategy, useClass: HashLocationStrategy },\n    ]\n} )\nexport class AdminRoutingModule { }\n"],"sourceRoot":""}